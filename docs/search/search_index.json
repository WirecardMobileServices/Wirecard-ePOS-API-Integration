{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Wirecard ePOS Wirecard ePOS is a unique cashier system developed by the team of 33 developers, testers and business analysts. Wirecard ePOS combines smart cash-register, product catalogue and payment acceptance into one solution. Wirecard ePOS solution can be utilized in following ways: Wirecard ePOS API - for retailers who prefer direct API (backend-to-backend) integration Wirecard ePOS SDK - for retailers who want to develop their own iOS or Android application Wirecard ePOS App - for retailers who prefer easy to use iOS or Android application Wirecard ePOS API Integration Guide If you wish to integrate via Wirecard ePOS API, please follow this integration guide. Wirecard ePOS SDK Integration Guide If you wish to integrate via Wirecard ePOS SDK, please follow the integration guide available at Wirecard ePOS SDK . Wirecard ePOS Application If you wish to benefit from Wirecard ePOS App, please download it at Apple App Store or Google Play Store . Tip Wirecard ePOS belongs to Wirecard portfolio of point of sale (POS) solutions. For complete information about all Wirecard products and solutions, please contact your Wirecard representative. If you don't know your Wirecard representative, please contact us at retail.mpos@wirecard.com","title":"Welcome"},{"location":"#welcome-to-wirecard-epos","text":"Wirecard ePOS is a unique cashier system developed by the team of 33 developers, testers and business analysts. Wirecard ePOS combines smart cash-register, product catalogue and payment acceptance into one solution. Wirecard ePOS solution can be utilized in following ways: Wirecard ePOS API - for retailers who prefer direct API (backend-to-backend) integration Wirecard ePOS SDK - for retailers who want to develop their own iOS or Android application Wirecard ePOS App - for retailers who prefer easy to use iOS or Android application Wirecard ePOS API Integration Guide If you wish to integrate via Wirecard ePOS API, please follow this integration guide. Wirecard ePOS SDK Integration Guide If you wish to integrate via Wirecard ePOS SDK, please follow the integration guide available at Wirecard ePOS SDK . Wirecard ePOS Application If you wish to benefit from Wirecard ePOS App, please download it at Apple App Store or Google Play Store . Tip Wirecard ePOS belongs to Wirecard portfolio of point of sale (POS) solutions. For complete information about all Wirecard products and solutions, please contact your Wirecard representative. If you don't know your Wirecard representative, please contact us at retail.mpos@wirecard.com","title":"Welcome to Wirecard ePOS"},{"location":"advanced_overview/","text":"Advanced Integration chapter guides you through advanced information for partners who want to provide value added services on top of payment acceptance functionality.","title":"Overview"},{"location":"alipay/","text":"Alipay barcode payment is one-step payment method what means that only one request to Wirecard ePOS API is needed. Tip For more details regarding Alipay, visit Wirecard China Payment website. Important Sale requests are serviced at https://switch.wirecard.com/mswitch-server/v1/sales URL. Purchase Operation In context of Wirecard ePOS, every payment transaction (alias payment) is part of a Sale . In order to process Alipay payment, call Wirecard ePOS with Sale-PURCHASE request defined below: Request { \"multitender\": \"true\", \"operation\" : \"PURCHASE\", \"externalId\": \"123456789\", \"totalAmount\" : 10, \"currencyCode\" : \"EUR\", \"payments\" : [ { \"paymentMethod\" : \"ALIPAY\", \"transactionType\" : \"PURCHASE\", \"amount\" : 10, \"consumerId\" : \"28050011719660761\" } ] } \"multitender\" - boolean flag \"TRUE\" - required; compliant with newest Sale Model, which is described in this integration guide \"FALSE\" - deprecated; old Sale Model is not addressed in this integration guide \"operation\" - defines type of Sale request; \"PURCHASE\" operation creates new Sale-Purchase record \"externalId\" - optional - meant to be used for integrator tracking purpose; it is forwarded to payment gateway \"totalAmount\" - defines amount of Sale-Purchase \"currencyCode\" - defines currency, based on ISO 4217 standard \"payments\" - payment-specific information; one payment transaction per request is supported \"paymentMethod\" - defines payment method \"transactionType\" - defines type of this transaction; \"PURCHASE\" transaction type moves funds from end-consumer to merchant \"amount\" - defines transaction amount \"consumerId\" - value of scanned barcode (QR code) Note In context of Wirecard ePOS, term Purchase is used for both: type of Sale - defined more specifically as Sale-Purchase transaction type - e.g. alipay purchase transaction, cash purchase transaction, etc. Response { \"operation\": \"PURCHASE\", \"timeStamp\": \"2019-04-12T12:27:43.069Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"a66bbac362404fcc9c08868f881f94d9\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"ALIPAY\", \"transactionType\": \"PURCHASE\", \"id\": \"a2a688bafd0e43a5965ec639daf17dc7\", \"timeStamp\": \"2019-04-12T12:27:42.963Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"alipayPayTime\": \"20190412202742\", \"alipayTransId\": \"2019041220001004050261859239\", \"alipayBuyerLoginId\": \"int*@service.*\", \"exchangeRate\": 6.9187, \"transAmountCny\": 691.87, \"merchantName\": \"MA-SWITCH-01\", \"terminalId\": \"1234567\", \"gatewayReference\": \"20e66beb-b47a-4d51-9ea6-31e30ca6a040\" } ], \"externalId\": \"123456789\", \"merchantReceiptId\": 250, \"multitender\": true } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful (taken from payments.statuses.code ) \"result\" - \"SUCCESS\" means operation is successful (taken from payments.statuses.result ) \"id\" - Sale-Purchase identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - specific information for every payment method \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of purchase transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed by payment gateway \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"alipayPayTime\" - date-time in Alipay system \"alipayTransId\" - transaction identifier in Alipay System \"alipayBuyerLoginId\" - end-consumer (buyer) identifier in Alipay system \"exchangeRate\" - exchange rate between Sale currency and CNY \"transAmountCny\" - amount in CNY (Chinese Yuan) \"merchantName\" - merchant name in Alipay system \"terminalId\" - terminal identifier \"gatewayReference\" - reference to transaction in payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier per merchant; it is incremented with every Sale-Purchase and Sale-Return; advised to be printed on receipt as barcode \"multitender\" - echoed from request Important After successful PURCHASE operation, GET a Sale call is advised, as it provides complete Sale information. Reverse & Cancel Operation REVERSE operation is typically used in case Sale-Purchase was created accidentally. REVERSE operation serves for reversing particular purchase transaction. CANCEL operation is used to change state of Sale-Purchase to CANCELED. CANCEL operation can be sent only as long as the purchase transaction is reversed. In order to reverse alipay purchase transaction, call Wirecard ePOS with Sale-REVERSE request defined below: Reverse Request { \"operation\": \"REVERSE\", \"originalSaleId\": \"a66bbac362404fcc9c08868f881f94d9\", \"payments\": [ { \"paymentMethod\": \"ALIPAY\", \"transactionType\": \"REVERSAL\", \"originalTransactionId\" : \"a2a688bafd0e43a5965ec639daf17dc7\" } ] } \"operation\" - defines type of Sale request \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - payment-specific information; one payment transaction per request is supported \"paymentMethod\" - defines payment method; it must be same as original payment transaction \"transactionType\" - defines type of this transaction; REVERSE operation must include REVERSAL transaction type \"originalTransactionId\" - identifier of original purchase transaction Reverse Response { \"operation\": \"REVERSE\", \"timeStamp\": \"2019-04-12T12:27:59.86Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"a66bbac362404fcc9c08868f881f94d9\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"ALIPAY\", \"transactionType\": \"REVERSAL\", \"id\": \"3a91fdb770004ba687c006fe2f2e122b\", \"timeStamp\": \"2019-04-12T12:27:59.817Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"alipayPayTime\": \"20190412202742\", \"alipayTransId\": \"2019041220001004050261859239\", \"alipayBuyerLoginId\": \"int*@service.*\", \"exchangeRate\": 6.9187, \"transAmountCny\": 691.87, \"merchantName\": \"MA-SWITCH-01\", \"terminalId\": \"1234567\", \"alipayCancelTime\": \"20190412202759\", \"gatewayReference\": \"49e3a790-874f-49ed-b690-e553b59249d6\" } ] } In order to explicitly change state of Sale-Purchase to CANCELED, call Wirecard ePOS with Sale-CANCEL request defined below: Cancel Request { \"operation\": \"CANCEL\", \"originalSaleId\": \"a66bbac362404fcc9c08868f881f94d9\" } \"operation\" - defines type of Sale request \"originalSaleId\" - identifier of original Sale-Purchase Cancel Response { \"operation\": \"CANCEL\", \"timeStamp\": \"2019-04-12T12:46:38.229Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"a66bbac362404fcc9c08868f881f94d9\", \"externalCashierId\": null } Return Operation RETURN operation is used in case end-consumer returns merchandise and asks for a refund. Wirecard ePOS support partial as well as full returns. In order to refund alipay purchase transaction, call Wirecard ePOS with Sale-RETURN request defined below: Request { \"operation\" : \"RETURN\", \"totalAmount\" : 100, \"currencyCode\" : \"EUR\", \"originalSaleId\" : \"d79dc95ee0e041ed8657a763cafded51\", \"payments\" : [ { \"paymentMethod\" : \"ALIPAY\", \"transactionType\" : \"REFERENCE_REFUND\", \"amount\" : 100, \"originalTransactionId\" : \"b1c4a37810ac43f598f29450c760b90d\" } ] } \"operation\" - defines type of Sale request \"totalAmount\" - defines amount to be refunded; it can be equal (full return) or less (partial return) than totalAmount in original Sale-Purchase \"currencyCode\" - must be same as for original Sale-Purchase \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - payment-specific information; one payment transaction per request is supported \"paymentMethod\" - defines payment method \"transactionType\" - defines type of this transaction; must be \"REFERENCE_REFUND\" when payment method is ALIPAY \"amount\" - defines amount to be refunded \"originalTransactionId\" - identifier of original alipay purchase transaction Response { \"operation\": \"RETURN\", \"timeStamp\": \"2019-04-12T12:52:30.218Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"d79dc95ee0e041ed8657a763cafded51\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"ALIPAY\", \"transactionType\": \"REFERENCE_REFUND\", \"id\": \"8516d319573146a0a4853b48482ce0d5\", \"timeStamp\": \"2019-04-12T12:52:30.092Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"alipayPayTime\": \"20190412205203\", \"alipayTransId\": \"2019041220001004050261859239\", \"alipayBuyerLoginId\": \"int*@service.*\", \"exchangeRate\": 6.9187, \"transAmountCny\": 691.87, \"merchantName\": \"MA-SWITCH-01\", \"terminalId\": \"1234567\", \"refundAmountCny\": 691.87, \"refundExchangeRate\": 6.9187, \"gatewayReference\": \"0f27700f-29db-4843-b73c-ffba2442e7f4\" } ], \"externalId\": null, \"merchantReceiptId\": 252 } Tip See also complete list of Wirecard ePOS Sale request & response examples . GET a Sale Call You can see below an example of GET a Sale call with excluded merchant and user objects which are going to be described in Merchant Management and User Management respectively. GET https://switch-test.wirecard.com/mswitch-server/v1/sales/6434f3ee5f404fec89d95c7f8538ac68?excludeField=merchant&excludeField=user { \"id\": \"6434f3ee5f404fec89d95c7f8538ac68\", \"type\": \"PURCHASE\", \"status\": \"COMPLETED\", \"totalAmount\": 100, \"note\": null, \"externalId\": null, \"externalCashierId\": null, \"customerId\": null, \"initialized\": \"2019-04-12T13:23:48.571Z\", \"shop\": null, \"currency\": { \"number\": 978, \"code\": \"EUR\", \"name\": \"Euro\", \"minorUnit\": 2 }, \"unitPricesIncludeTax\": null, \"items\": [ ], \"transactions\": [ { \"type\": \"ALIPAY_PURCHASE\", \"id\": \"587b078f93c849a2a1915c7c396cf15d\", \"status\": \"COMPLETED\", \"amount\": 100, \"lastUpdated\": \"2019-04-12T13:23:48.66Z\", \"initialized\": \"2019-04-12T13:23:48.573Z\", \"message\": \"The resource was successfully created on Alipay side.\", \"gateway\": { \"id\": \"wdEeSimulated\", \"name\": \"Wirecard EE Simulated\", \"type\": \"WIRECARD_EE_SIMULATED\", \"url\": \"http://dummy\" }, \"gatewayReference\": \"f40369c5-3f88-4492-8d23-268d3c4f14dc\", \"processedByGateway\": \"2019-04-12T13:23:48.644Z\", \"alipayPayTime\": \"20190412212348\", \"alipayTransId\": \"2019041221001004050261859239\", \"alipayBuyerLoginId\": \"int*@service.*\", \"exchangeRate\": 6.9187, \"transAmountCny\": 691.87, \"merchantName\": \"MA-SWITCH-01\", \"terminalId\": \"1234567\", \"alipayConsumerAccountId\": \"2088122878784050\", \"autoResolveTransactions\": [ ], \"transactionBarcodeId\": \"28050011719660761\" } ], \"location\": null, \"clientInfo\": null, \"merchantReceiptId\": 254, \"cancelledBy\": null, \"shiftId\": null, \"cashRegisterId\": null, \"emailForReceiptProvided\": false, \"multitender\": true }","title":"Alipay"},{"location":"alipay/#purchase-operation","text":"In context of Wirecard ePOS, every payment transaction (alias payment) is part of a Sale . In order to process Alipay payment, call Wirecard ePOS with Sale-PURCHASE request defined below:","title":"Purchase Operation"},{"location":"alipay/#request","text":"{ \"multitender\": \"true\", \"operation\" : \"PURCHASE\", \"externalId\": \"123456789\", \"totalAmount\" : 10, \"currencyCode\" : \"EUR\", \"payments\" : [ { \"paymentMethod\" : \"ALIPAY\", \"transactionType\" : \"PURCHASE\", \"amount\" : 10, \"consumerId\" : \"28050011719660761\" } ] } \"multitender\" - boolean flag \"TRUE\" - required; compliant with newest Sale Model, which is described in this integration guide \"FALSE\" - deprecated; old Sale Model is not addressed in this integration guide \"operation\" - defines type of Sale request; \"PURCHASE\" operation creates new Sale-Purchase record \"externalId\" - optional - meant to be used for integrator tracking purpose; it is forwarded to payment gateway \"totalAmount\" - defines amount of Sale-Purchase \"currencyCode\" - defines currency, based on ISO 4217 standard \"payments\" - payment-specific information; one payment transaction per request is supported \"paymentMethod\" - defines payment method \"transactionType\" - defines type of this transaction; \"PURCHASE\" transaction type moves funds from end-consumer to merchant \"amount\" - defines transaction amount \"consumerId\" - value of scanned barcode (QR code) Note In context of Wirecard ePOS, term Purchase is used for both: type of Sale - defined more specifically as Sale-Purchase transaction type - e.g. alipay purchase transaction, cash purchase transaction, etc.","title":"Request"},{"location":"alipay/#response","text":"{ \"operation\": \"PURCHASE\", \"timeStamp\": \"2019-04-12T12:27:43.069Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"a66bbac362404fcc9c08868f881f94d9\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"ALIPAY\", \"transactionType\": \"PURCHASE\", \"id\": \"a2a688bafd0e43a5965ec639daf17dc7\", \"timeStamp\": \"2019-04-12T12:27:42.963Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"alipayPayTime\": \"20190412202742\", \"alipayTransId\": \"2019041220001004050261859239\", \"alipayBuyerLoginId\": \"int*@service.*\", \"exchangeRate\": 6.9187, \"transAmountCny\": 691.87, \"merchantName\": \"MA-SWITCH-01\", \"terminalId\": \"1234567\", \"gatewayReference\": \"20e66beb-b47a-4d51-9ea6-31e30ca6a040\" } ], \"externalId\": \"123456789\", \"merchantReceiptId\": 250, \"multitender\": true } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful (taken from payments.statuses.code ) \"result\" - \"SUCCESS\" means operation is successful (taken from payments.statuses.result ) \"id\" - Sale-Purchase identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - specific information for every payment method \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of purchase transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed by payment gateway \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"alipayPayTime\" - date-time in Alipay system \"alipayTransId\" - transaction identifier in Alipay System \"alipayBuyerLoginId\" - end-consumer (buyer) identifier in Alipay system \"exchangeRate\" - exchange rate between Sale currency and CNY \"transAmountCny\" - amount in CNY (Chinese Yuan) \"merchantName\" - merchant name in Alipay system \"terminalId\" - terminal identifier \"gatewayReference\" - reference to transaction in payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier per merchant; it is incremented with every Sale-Purchase and Sale-Return; advised to be printed on receipt as barcode \"multitender\" - echoed from request Important After successful PURCHASE operation, GET a Sale call is advised, as it provides complete Sale information.","title":"Response"},{"location":"alipay/#reverse-cancel-operation","text":"REVERSE operation is typically used in case Sale-Purchase was created accidentally. REVERSE operation serves for reversing particular purchase transaction. CANCEL operation is used to change state of Sale-Purchase to CANCELED. CANCEL operation can be sent only as long as the purchase transaction is reversed. In order to reverse alipay purchase transaction, call Wirecard ePOS with Sale-REVERSE request defined below:","title":"Reverse &amp; Cancel Operation"},{"location":"alipay/#reverse-request","text":"{ \"operation\": \"REVERSE\", \"originalSaleId\": \"a66bbac362404fcc9c08868f881f94d9\", \"payments\": [ { \"paymentMethod\": \"ALIPAY\", \"transactionType\": \"REVERSAL\", \"originalTransactionId\" : \"a2a688bafd0e43a5965ec639daf17dc7\" } ] } \"operation\" - defines type of Sale request \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - payment-specific information; one payment transaction per request is supported \"paymentMethod\" - defines payment method; it must be same as original payment transaction \"transactionType\" - defines type of this transaction; REVERSE operation must include REVERSAL transaction type \"originalTransactionId\" - identifier of original purchase transaction","title":"Reverse Request"},{"location":"alipay/#reverse-response","text":"{ \"operation\": \"REVERSE\", \"timeStamp\": \"2019-04-12T12:27:59.86Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"a66bbac362404fcc9c08868f881f94d9\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"ALIPAY\", \"transactionType\": \"REVERSAL\", \"id\": \"3a91fdb770004ba687c006fe2f2e122b\", \"timeStamp\": \"2019-04-12T12:27:59.817Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"alipayPayTime\": \"20190412202742\", \"alipayTransId\": \"2019041220001004050261859239\", \"alipayBuyerLoginId\": \"int*@service.*\", \"exchangeRate\": 6.9187, \"transAmountCny\": 691.87, \"merchantName\": \"MA-SWITCH-01\", \"terminalId\": \"1234567\", \"alipayCancelTime\": \"20190412202759\", \"gatewayReference\": \"49e3a790-874f-49ed-b690-e553b59249d6\" } ] } In order to explicitly change state of Sale-Purchase to CANCELED, call Wirecard ePOS with Sale-CANCEL request defined below:","title":"Reverse Response"},{"location":"alipay/#cancel-request","text":"{ \"operation\": \"CANCEL\", \"originalSaleId\": \"a66bbac362404fcc9c08868f881f94d9\" } \"operation\" - defines type of Sale request \"originalSaleId\" - identifier of original Sale-Purchase","title":"Cancel Request"},{"location":"alipay/#cancel-response","text":"{ \"operation\": \"CANCEL\", \"timeStamp\": \"2019-04-12T12:46:38.229Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"a66bbac362404fcc9c08868f881f94d9\", \"externalCashierId\": null }","title":"Cancel Response"},{"location":"alipay/#return-operation","text":"RETURN operation is used in case end-consumer returns merchandise and asks for a refund. Wirecard ePOS support partial as well as full returns. In order to refund alipay purchase transaction, call Wirecard ePOS with Sale-RETURN request defined below:","title":"Return Operation"},{"location":"alipay/#request_1","text":"{ \"operation\" : \"RETURN\", \"totalAmount\" : 100, \"currencyCode\" : \"EUR\", \"originalSaleId\" : \"d79dc95ee0e041ed8657a763cafded51\", \"payments\" : [ { \"paymentMethod\" : \"ALIPAY\", \"transactionType\" : \"REFERENCE_REFUND\", \"amount\" : 100, \"originalTransactionId\" : \"b1c4a37810ac43f598f29450c760b90d\" } ] } \"operation\" - defines type of Sale request \"totalAmount\" - defines amount to be refunded; it can be equal (full return) or less (partial return) than totalAmount in original Sale-Purchase \"currencyCode\" - must be same as for original Sale-Purchase \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - payment-specific information; one payment transaction per request is supported \"paymentMethod\" - defines payment method \"transactionType\" - defines type of this transaction; must be \"REFERENCE_REFUND\" when payment method is ALIPAY \"amount\" - defines amount to be refunded \"originalTransactionId\" - identifier of original alipay purchase transaction","title":"Request"},{"location":"alipay/#response_1","text":"{ \"operation\": \"RETURN\", \"timeStamp\": \"2019-04-12T12:52:30.218Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"d79dc95ee0e041ed8657a763cafded51\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"ALIPAY\", \"transactionType\": \"REFERENCE_REFUND\", \"id\": \"8516d319573146a0a4853b48482ce0d5\", \"timeStamp\": \"2019-04-12T12:52:30.092Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"alipayPayTime\": \"20190412205203\", \"alipayTransId\": \"2019041220001004050261859239\", \"alipayBuyerLoginId\": \"int*@service.*\", \"exchangeRate\": 6.9187, \"transAmountCny\": 691.87, \"merchantName\": \"MA-SWITCH-01\", \"terminalId\": \"1234567\", \"refundAmountCny\": 691.87, \"refundExchangeRate\": 6.9187, \"gatewayReference\": \"0f27700f-29db-4843-b73c-ffba2442e7f4\" } ], \"externalId\": null, \"merchantReceiptId\": 252 } Tip See also complete list of Wirecard ePOS Sale request & response examples .","title":"Response"},{"location":"alipay/#get-a-sale-call","text":"You can see below an example of GET a Sale call with excluded merchant and user objects which are going to be described in Merchant Management and User Management respectively. GET https://switch-test.wirecard.com/mswitch-server/v1/sales/6434f3ee5f404fec89d95c7f8538ac68?excludeField=merchant&excludeField=user { \"id\": \"6434f3ee5f404fec89d95c7f8538ac68\", \"type\": \"PURCHASE\", \"status\": \"COMPLETED\", \"totalAmount\": 100, \"note\": null, \"externalId\": null, \"externalCashierId\": null, \"customerId\": null, \"initialized\": \"2019-04-12T13:23:48.571Z\", \"shop\": null, \"currency\": { \"number\": 978, \"code\": \"EUR\", \"name\": \"Euro\", \"minorUnit\": 2 }, \"unitPricesIncludeTax\": null, \"items\": [ ], \"transactions\": [ { \"type\": \"ALIPAY_PURCHASE\", \"id\": \"587b078f93c849a2a1915c7c396cf15d\", \"status\": \"COMPLETED\", \"amount\": 100, \"lastUpdated\": \"2019-04-12T13:23:48.66Z\", \"initialized\": \"2019-04-12T13:23:48.573Z\", \"message\": \"The resource was successfully created on Alipay side.\", \"gateway\": { \"id\": \"wdEeSimulated\", \"name\": \"Wirecard EE Simulated\", \"type\": \"WIRECARD_EE_SIMULATED\", \"url\": \"http://dummy\" }, \"gatewayReference\": \"f40369c5-3f88-4492-8d23-268d3c4f14dc\", \"processedByGateway\": \"2019-04-12T13:23:48.644Z\", \"alipayPayTime\": \"20190412212348\", \"alipayTransId\": \"2019041221001004050261859239\", \"alipayBuyerLoginId\": \"int*@service.*\", \"exchangeRate\": 6.9187, \"transAmountCny\": 691.87, \"merchantName\": \"MA-SWITCH-01\", \"terminalId\": \"1234567\", \"alipayConsumerAccountId\": \"2088122878784050\", \"autoResolveTransactions\": [ ], \"transactionBarcodeId\": \"28050011719660761\" } ], \"location\": null, \"clientInfo\": null, \"merchantReceiptId\": 254, \"cancelledBy\": null, \"shiftId\": null, \"cashRegisterId\": null, \"emailForReceiptProvided\": false, \"multitender\": true }","title":"GET a Sale Call"},{"location":"card/","text":"Note Sale requests are serviced at https://switch.wirecard.com/mswitch-server/v1/sales URL.","title":"Card"},{"location":"cash/","text":"Cash is the most straightforward payment method to integrate. Important Sale requests are serviced at https://switch.wirecard.com/mswitch-server/v1/sales URL. Purchase Operation In context of Wirecard ePOS, every payment transaction (alias payment) is part of a Sale . In order to process cash payment, call Wirecard ePOS with Sale-PURCHASE request defined below: Request { \"multitender\": \"true\", \"operation\" : \"PURCHASE\", \"externalId\": \"123456789\", \"note\": \"My First Sale\", \"externalId\": \"123456789\", \"totalAmount\" : 10.0, \"currencyCode\" : \"EUR\", \"payments\" : [ { \"paymentMethod\" : \"CASH\", \"transactionType\" : \"PURCHASE\", \"amount\" : 10.0 } ] } \"multitender\" - boolean flag \"TRUE\" - required; compliant with newest Sale Model, which is described in this integration guide \"FALSE\" - deprecated; old Sale Model is not addressed in this integration guide \"operation\" - defines type of Sale request; \"PURCHASE\" operation creates new Sale-Purchase record \"note\" - optional - note is forwarded to payment gateway \"externalId\" - optional - meant to be used for integrator tracking purpose; it is forwarded to payment gateway \"totalAmount\" - defines amount of Sale-Purchase \"currencyCode\" - defines currency, based on ISO 4217 standard \"payments\" - payment-specific information; one payment transaction per request is supported \"paymentMethod\" - defines payment method \"transactionType\" - defines type of this transaction; \"PURCHASE\" transaction type moves funds from end-consumer to merchant \"amount\" - defines transaction amount Note In context of Wirecard ePOS, term Purchase is used for both: type of Sale - defined more specifically as Sale-Purchase transaction type - e.g. cash purchase transaction, card purchase transaction, etc. Response { \"operation\": \"PURCHASE\", \"timeStamp\": \"2019-04-10T09:41:39.597Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"bdb7dd5566f043ab9b91108863a6e833\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"CASH\", \"transactionType\": \"PURCHASE\", \"id\": \"2d08be0814f04cc1a2b2b9b5cd1273e2\", \"timeStamp\": \"2019-04-10T09:41:39.554Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ] } ], \"externalId\": null, \"merchantReceiptId\": 457, \"multitender\": true } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful (taken from payments.statuses.code ) \"result\" - \"SUCCESS\" means operation is successful (taken from payments.statuses.result ) \"id\" - Sale-Purchase identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - specific information for every payment method \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of purchase transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed by payment gateway \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier per merchant; it is incremented with every Sale-Purchase and Sale-Return; advised to be printed on receipt as barcode \"multitender\" - echoed from request Important After successful PURCHASE operation, GET a Sale call is advised, as it provides complete Sale information. Reverse & Cancel Operation REVERSE operation is typically used in case Sale-Purchase was created accidentally. REVERSE operation serves for reversing particular purchase transaction. CANCEL operation is used to change state of Sale-Purchase to CANCELED. CANCEL operation can be sent only as long as the purchase transaction is reversed. In order to reverse cash purchase transaction, call Wirecard ePOS with Sale-REVERSE request defined below: Reverse Request { \"operation\": \"REVERSE\", \"originalSaleId\": \"bdb7dd5566f043ab9b91108863a6e833\", \"payments\": [ { \"paymentMethod\": \"CASH\", \"transactionType\": \"REVERSAL\", \"originalTransactionId\" : \"2d08be0814f04cc1a2b2b9b5cd1273e2\" } ] } \"operation\" - defines type of Sale request \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - payment-specific information; one payment transaction per request is supported \"paymentMethod\" - defines payment method; it must be same as original payment transaction \"transactionType\" - defines type of this transaction; REVERSE operation must include REVERSAL transaction type \"originalTransactionId\" - identifier of original purchase transaction Reverse Response { \"operation\": \"REVERSE\", \"timeStamp\": \"2019-04-11T06:49:51.541Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"bdb7dd5566f043ab9b91108863a6e833\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"CASH\", \"transactionType\": \"REVERSAL\", \"id\": \"6f5789c304594fe8a796d5b2bdaebbf0\", \"timeStamp\": \"2019-04-11T06:49:51.532Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ] } ] } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful (taken from payments.statuses.code ) \"result\" - \"SUCCESS\" means operation is successful (taken from payments.statuses.result ) \"id\" - echoed from request; Sale-Purchase identifier \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - specific information for every payment method \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of reversal transaction \"timeStamp\" - date-time when reversal transaction was processed by payment gateway \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway In order to explicitly change state of Sale-Purchase to CANCELED, call Wirecard ePOS with Sale-CANCEL request defined below: Cancel Request { \"operation\": \"CANCEL\", \"originalSaleId\": \"bdb7dd5566f043ab9b91108863a6e833\" } \"operation\" - defines type of Sale request \"originalSaleId\" - identifier of original Sale-Purchase Cancel Response { \"operation\": \"CANCEL\", \"timeStamp\": \"2019-04-11T13:30:05.187Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"bdb7dd5566f043ab9b91108863a6e833\", \"externalCashierId\": null } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful (taken from payments.statuses.code ) \"result\" - \"SUCCESS\" means operation is successful (taken from payments.statuses.result ) \"id\" - echoed from request; Sale-Purchase identifier \"externalCashierId\" - relevant for Advanced Integration ; otherwise null Return Operation RETURN operation is used in case end-consumer returns merchandise and asks for a refund. Wirecard ePOS support partial as well as full returns. In order to refund cash purchase transaction, call Wirecard ePOS with Sale-RETURN request defined below: Request { \"operation\" : \"RETURN\", \"note\" : \"My First Return\", \"externalId\" : \"20190411001\", \"totalAmount\" : 10, \"currencyCode\" : \"EUR\", \"originalSaleId\" : \"344009e1f53a4dd0af9751f0b7d7d99d\", \"payments\" : [ { \"paymentMethod\" : \"CASH\", \"transactionType\" : \"REFUND\", \"amount\" : 10 } ] } \"operation\" - defines type of Sale request \"note\" - optional - note is forwarded to payment gateway \"externalId\" - optional - meant to be used for integrator tracking purpose; it is forwarded to payment gateway \"totalAmount\" - defines amount to be refunded; it can be equal (full return) or less (partial return) than totalAmount in original Sale-Purchase \"currencyCode\" - must be same as for original Sale-Purchase \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - payment-specific information; one payment transaction per request is supported \"paymentMethod\" - defines payment method \"transactionType\" - defines type of this transaction; must be \"REFUND\" when payment method is CASH \"amount\" - defines amount to be refunded Response { \"operation\": \"RETURN\", \"timeStamp\": \"2019-04-11T09:55:15.594Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"5c0e6ef0da784b8c940b488ef6f0cb8b\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"CASH\", \"transactionType\": \"REFUND\", \"id\": \"2fec6d42713a4703a4422b1359c2b588\", \"timeStamp\": \"2019-04-11T09:55:15.575Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ] } ], \"externalId\": \"20190411001\", \"merchantReceiptId\": 467 } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful (taken from payments.statuses.code ) \"result\" - \"SUCCESS\" means operation is successful (taken from payments.statuses.result ) \"id\" - Sale-Return identifier assigned by Wirecard ePOS \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - specific information for every payment method \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of refund transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed by payment gateway \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier per merchant; it is incremented with every Sale-Purchase and Sale-Return; advised to be printed on receipt as barcode Tip See also complete list of Wirecard ePOS Sale request & response examples . GET a Sale Call You can see below an example of GET a Sale call with excluded merchant and user objects which are going to be described in Merchant Management and User Management respectively. GET https://switch-test.wirecard.com/mswitch-server/v1/sales/19267cf3a3cb4e2d8131917b5c092a0d?excludeField=merchant&excludeField=user { \"id\": \"19267cf3a3cb4e2d8131917b5c092a0d\", \"type\": \"PURCHASE\", \"status\": \"COMPLETED\", \"totalAmount\": 10, \"note\": \"My First Sale\", \"externalId\": null, \"externalCashierId\": null, \"customerId\": null, \"initialized\": \"2019-04-11T13:36:11.521Z\", \"shop\": null, \"currency\": { \"number\": 978, \"code\": \"EUR\", \"name\": \"Euro\", \"minorUnit\": 2 }, \"unitPricesIncludeTax\": null, \"items\": [ ], \"transactions\": [ { \"type\": \"CASH_PURCHASE\", \"id\": \"7a8f701dd40743e0ad942ae32cd0e9d8\", \"status\": \"COMPLETED\", \"amount\": 10, \"lastUpdated\": \"2019-04-11T13:36:11.597Z\", \"initialized\": \"2019-04-11T13:36:11.521Z\", \"message\": null } ], \"location\": null, \"clientInfo\": null, \"merchantReceiptId\": 245, \"cancelledBy\": null, \"shiftId\": null, \"cashRegisterId\": null, \"emailForReceipt\": null, \"emailForReceiptProvided\": false, \"multitender\": true }","title":"Cash"},{"location":"cash/#purchase-operation","text":"In context of Wirecard ePOS, every payment transaction (alias payment) is part of a Sale . In order to process cash payment, call Wirecard ePOS with Sale-PURCHASE request defined below:","title":"Purchase Operation"},{"location":"cash/#request","text":"{ \"multitender\": \"true\", \"operation\" : \"PURCHASE\", \"externalId\": \"123456789\", \"note\": \"My First Sale\", \"externalId\": \"123456789\", \"totalAmount\" : 10.0, \"currencyCode\" : \"EUR\", \"payments\" : [ { \"paymentMethod\" : \"CASH\", \"transactionType\" : \"PURCHASE\", \"amount\" : 10.0 } ] } \"multitender\" - boolean flag \"TRUE\" - required; compliant with newest Sale Model, which is described in this integration guide \"FALSE\" - deprecated; old Sale Model is not addressed in this integration guide \"operation\" - defines type of Sale request; \"PURCHASE\" operation creates new Sale-Purchase record \"note\" - optional - note is forwarded to payment gateway \"externalId\" - optional - meant to be used for integrator tracking purpose; it is forwarded to payment gateway \"totalAmount\" - defines amount of Sale-Purchase \"currencyCode\" - defines currency, based on ISO 4217 standard \"payments\" - payment-specific information; one payment transaction per request is supported \"paymentMethod\" - defines payment method \"transactionType\" - defines type of this transaction; \"PURCHASE\" transaction type moves funds from end-consumer to merchant \"amount\" - defines transaction amount Note In context of Wirecard ePOS, term Purchase is used for both: type of Sale - defined more specifically as Sale-Purchase transaction type - e.g. cash purchase transaction, card purchase transaction, etc.","title":"Request"},{"location":"cash/#response","text":"{ \"operation\": \"PURCHASE\", \"timeStamp\": \"2019-04-10T09:41:39.597Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"bdb7dd5566f043ab9b91108863a6e833\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"CASH\", \"transactionType\": \"PURCHASE\", \"id\": \"2d08be0814f04cc1a2b2b9b5cd1273e2\", \"timeStamp\": \"2019-04-10T09:41:39.554Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ] } ], \"externalId\": null, \"merchantReceiptId\": 457, \"multitender\": true } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful (taken from payments.statuses.code ) \"result\" - \"SUCCESS\" means operation is successful (taken from payments.statuses.result ) \"id\" - Sale-Purchase identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - specific information for every payment method \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of purchase transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed by payment gateway \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier per merchant; it is incremented with every Sale-Purchase and Sale-Return; advised to be printed on receipt as barcode \"multitender\" - echoed from request Important After successful PURCHASE operation, GET a Sale call is advised, as it provides complete Sale information.","title":"Response"},{"location":"cash/#reverse-cancel-operation","text":"REVERSE operation is typically used in case Sale-Purchase was created accidentally. REVERSE operation serves for reversing particular purchase transaction. CANCEL operation is used to change state of Sale-Purchase to CANCELED. CANCEL operation can be sent only as long as the purchase transaction is reversed. In order to reverse cash purchase transaction, call Wirecard ePOS with Sale-REVERSE request defined below:","title":"Reverse &amp; Cancel Operation"},{"location":"cash/#reverse-request","text":"{ \"operation\": \"REVERSE\", \"originalSaleId\": \"bdb7dd5566f043ab9b91108863a6e833\", \"payments\": [ { \"paymentMethod\": \"CASH\", \"transactionType\": \"REVERSAL\", \"originalTransactionId\" : \"2d08be0814f04cc1a2b2b9b5cd1273e2\" } ] } \"operation\" - defines type of Sale request \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - payment-specific information; one payment transaction per request is supported \"paymentMethod\" - defines payment method; it must be same as original payment transaction \"transactionType\" - defines type of this transaction; REVERSE operation must include REVERSAL transaction type \"originalTransactionId\" - identifier of original purchase transaction","title":"Reverse Request"},{"location":"cash/#reverse-response","text":"{ \"operation\": \"REVERSE\", \"timeStamp\": \"2019-04-11T06:49:51.541Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"bdb7dd5566f043ab9b91108863a6e833\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"CASH\", \"transactionType\": \"REVERSAL\", \"id\": \"6f5789c304594fe8a796d5b2bdaebbf0\", \"timeStamp\": \"2019-04-11T06:49:51.532Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ] } ] } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful (taken from payments.statuses.code ) \"result\" - \"SUCCESS\" means operation is successful (taken from payments.statuses.result ) \"id\" - echoed from request; Sale-Purchase identifier \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - specific information for every payment method \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of reversal transaction \"timeStamp\" - date-time when reversal transaction was processed by payment gateway \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway In order to explicitly change state of Sale-Purchase to CANCELED, call Wirecard ePOS with Sale-CANCEL request defined below:","title":"Reverse Response"},{"location":"cash/#cancel-request","text":"{ \"operation\": \"CANCEL\", \"originalSaleId\": \"bdb7dd5566f043ab9b91108863a6e833\" } \"operation\" - defines type of Sale request \"originalSaleId\" - identifier of original Sale-Purchase","title":"Cancel Request"},{"location":"cash/#cancel-response","text":"{ \"operation\": \"CANCEL\", \"timeStamp\": \"2019-04-11T13:30:05.187Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"bdb7dd5566f043ab9b91108863a6e833\", \"externalCashierId\": null } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful (taken from payments.statuses.code ) \"result\" - \"SUCCESS\" means operation is successful (taken from payments.statuses.result ) \"id\" - echoed from request; Sale-Purchase identifier \"externalCashierId\" - relevant for Advanced Integration ; otherwise null","title":"Cancel Response"},{"location":"cash/#return-operation","text":"RETURN operation is used in case end-consumer returns merchandise and asks for a refund. Wirecard ePOS support partial as well as full returns. In order to refund cash purchase transaction, call Wirecard ePOS with Sale-RETURN request defined below:","title":"Return Operation"},{"location":"cash/#request_1","text":"{ \"operation\" : \"RETURN\", \"note\" : \"My First Return\", \"externalId\" : \"20190411001\", \"totalAmount\" : 10, \"currencyCode\" : \"EUR\", \"originalSaleId\" : \"344009e1f53a4dd0af9751f0b7d7d99d\", \"payments\" : [ { \"paymentMethod\" : \"CASH\", \"transactionType\" : \"REFUND\", \"amount\" : 10 } ] } \"operation\" - defines type of Sale request \"note\" - optional - note is forwarded to payment gateway \"externalId\" - optional - meant to be used for integrator tracking purpose; it is forwarded to payment gateway \"totalAmount\" - defines amount to be refunded; it can be equal (full return) or less (partial return) than totalAmount in original Sale-Purchase \"currencyCode\" - must be same as for original Sale-Purchase \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - payment-specific information; one payment transaction per request is supported \"paymentMethod\" - defines payment method \"transactionType\" - defines type of this transaction; must be \"REFUND\" when payment method is CASH \"amount\" - defines amount to be refunded","title":"Request"},{"location":"cash/#response_1","text":"{ \"operation\": \"RETURN\", \"timeStamp\": \"2019-04-11T09:55:15.594Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"5c0e6ef0da784b8c940b488ef6f0cb8b\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"CASH\", \"transactionType\": \"REFUND\", \"id\": \"2fec6d42713a4703a4422b1359c2b588\", \"timeStamp\": \"2019-04-11T09:55:15.575Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ] } ], \"externalId\": \"20190411001\", \"merchantReceiptId\": 467 } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful (taken from payments.statuses.code ) \"result\" - \"SUCCESS\" means operation is successful (taken from payments.statuses.result ) \"id\" - Sale-Return identifier assigned by Wirecard ePOS \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - specific information for every payment method \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of refund transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed by payment gateway \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier per merchant; it is incremented with every Sale-Purchase and Sale-Return; advised to be printed on receipt as barcode Tip See also complete list of Wirecard ePOS Sale request & response examples .","title":"Response"},{"location":"cash/#get-a-sale-call","text":"You can see below an example of GET a Sale call with excluded merchant and user objects which are going to be described in Merchant Management and User Management respectively. GET https://switch-test.wirecard.com/mswitch-server/v1/sales/19267cf3a3cb4e2d8131917b5c092a0d?excludeField=merchant&excludeField=user { \"id\": \"19267cf3a3cb4e2d8131917b5c092a0d\", \"type\": \"PURCHASE\", \"status\": \"COMPLETED\", \"totalAmount\": 10, \"note\": \"My First Sale\", \"externalId\": null, \"externalCashierId\": null, \"customerId\": null, \"initialized\": \"2019-04-11T13:36:11.521Z\", \"shop\": null, \"currency\": { \"number\": 978, \"code\": \"EUR\", \"name\": \"Euro\", \"minorUnit\": 2 }, \"unitPricesIncludeTax\": null, \"items\": [ ], \"transactions\": [ { \"type\": \"CASH_PURCHASE\", \"id\": \"7a8f701dd40743e0ad942ae32cd0e9d8\", \"status\": \"COMPLETED\", \"amount\": 10, \"lastUpdated\": \"2019-04-11T13:36:11.597Z\", \"initialized\": \"2019-04-11T13:36:11.521Z\", \"message\": null } ], \"location\": null, \"clientInfo\": null, \"merchantReceiptId\": 245, \"cancelledBy\": null, \"shiftId\": null, \"cashRegisterId\": null, \"emailForReceipt\": null, \"emailForReceiptProvided\": false, \"multitender\": true }","title":"GET a Sale Call"},{"location":"core_overview/","text":"At the core of Wirecard ePOS solution is payment acceptance. Core Integration chapter provides all information in order to successfully process Payment Transaction . Note Payment Transaction (also called payment) is a monetary transaction with specific amount , payment method and type . In context of Wirecard ePOS, every Payment Transaction is part of Sale . Note Sale is central ePOS object. It must contain amount to pay and at least one payment transaction . Additionally, Sale may include sale items (also called shopping basket), reference to merchant shop , reference to cash register and other optional sale information. Wirecard ePOS allows merchants to divide total amount to pay to multiple payment transactions. Example Jeans in value of 100 \u20ac are paid by two payment transactions: 60 \u20ac is paid by card and 40 \u20ac is paid in cash . Wirecard ePOS supports following payment methods : Cash Card (EMV/Magstripe) Alipay (barcode payment) WeChat (barcode payment) Note Accepted card schemes are VISA and Mastercard . American Express , UnionPay International and JCB card schemes are coming soon.","title":"Overview"},{"location":"discounts/","text":"","title":"Discounts"},{"location":"getting-started/","text":"This chapter provides all information you need to know in order to start your integration right away. Authentication and Security First of all, you need to have Wirecard ePOS API credentials (username & password) in order to successfully authenticate with Wirecard ePOS API. At the moment, only basic access authentication is supported. Tip Please contact your Wirecard representative to obtain your personal credentials. If you don't know your Wirecard representative, please contact us at retail.mpos@wirecard.com Note In the context of an HTTP transaction, basic access authentication is a method for an HTTP user agent (e.g. a web browser) to provide a username and password when making a request. In basic HTTP authentication, a request contains a header field of the form Authorization: Basic , where credentials is the base64 encoding of id and password joined by a colon. HTTP Basic authentication (BA) implementation is the simplest technique for enforcing access controls to web resources because it does not require cookies, session identifiers, or login pages; rather, HTTP Basic authentication uses standard fields in the HTTP header, removing the need for handshakes. The BA mechanism provides no confidentiality protection for the transmitted credentials. They are merely encoded with Base64 in transit, but not encrypted or hashed in any way. Therefore, Basic Authentication is typically used in conjunction with HTTPS to provide confidentiality. When the user agent wants to send authentication credentials to the server, it may use the Authorization field. The Authorization field is constructed as follows: The username and password are combined with a single colon (:). This means that the username itself cannot contain a colon. The resulting string is encoded into an octet sequence. The character set to use for this encoding is by default unspecified, as long as it is compatible with US-ASCII, but the server may suggest use of UTF-8 by sending the charset parameter. The resulting string is encoded using a variant of Base64. The authorization method and a space (e.g. \"Basic \") is then prepended to the encoded string. For example, if the browser uses Aladdin as the username and OpenSesame as the password, then the field's value is the base64-encoding of Aladdin:OpenSesame, or QWxhZGRpbjpPcGVuU2VzYW1l. Then the Authorization header will appear as: \u201cAuthorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l\u201d See Wikipedia for more details. Testing Environment Wirecard ePOS TEST environment is provided to API integrators for their development purposes. In case your credentials are valid for ePOS TEST environment, please refer to the following URL: https://switch-test.wirecard.com/mswitch-server/ Tip You have received user account credentials to TEST environment. You can check the received credentials - type them instead of {YourUsername} and {YourPassword} - with following CURL request: curl -X GET \" https://switch-test.wirecard.com/mswitch-server/v1/info/version \" -H \"accept: text/plain\" -u {YourUsername}:{YourPassword} Upon successful authentication, system responds with its version. Production Environment Wirecard ePOS PROD environment is available on the following URL: https://switch.wirecard.com/mswitch-server/","title":"Getting Started"},{"location":"getting-started/#authentication-and-security","text":"First of all, you need to have Wirecard ePOS API credentials (username & password) in order to successfully authenticate with Wirecard ePOS API. At the moment, only basic access authentication is supported. Tip Please contact your Wirecard representative to obtain your personal credentials. If you don't know your Wirecard representative, please contact us at retail.mpos@wirecard.com Note In the context of an HTTP transaction, basic access authentication is a method for an HTTP user agent (e.g. a web browser) to provide a username and password when making a request. In basic HTTP authentication, a request contains a header field of the form Authorization: Basic , where credentials is the base64 encoding of id and password joined by a colon. HTTP Basic authentication (BA) implementation is the simplest technique for enforcing access controls to web resources because it does not require cookies, session identifiers, or login pages; rather, HTTP Basic authentication uses standard fields in the HTTP header, removing the need for handshakes. The BA mechanism provides no confidentiality protection for the transmitted credentials. They are merely encoded with Base64 in transit, but not encrypted or hashed in any way. Therefore, Basic Authentication is typically used in conjunction with HTTPS to provide confidentiality. When the user agent wants to send authentication credentials to the server, it may use the Authorization field. The Authorization field is constructed as follows: The username and password are combined with a single colon (:). This means that the username itself cannot contain a colon. The resulting string is encoded into an octet sequence. The character set to use for this encoding is by default unspecified, as long as it is compatible with US-ASCII, but the server may suggest use of UTF-8 by sending the charset parameter. The resulting string is encoded using a variant of Base64. The authorization method and a space (e.g. \"Basic \") is then prepended to the encoded string. For example, if the browser uses Aladdin as the username and OpenSesame as the password, then the field's value is the base64-encoding of Aladdin:OpenSesame, or QWxhZGRpbjpPcGVuU2VzYW1l. Then the Authorization header will appear as: \u201cAuthorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l\u201d See Wikipedia for more details.","title":"Authentication and Security"},{"location":"getting-started/#testing-environment","text":"Wirecard ePOS TEST environment is provided to API integrators for their development purposes. In case your credentials are valid for ePOS TEST environment, please refer to the following URL: https://switch-test.wirecard.com/mswitch-server/ Tip You have received user account credentials to TEST environment. You can check the received credentials - type them instead of {YourUsername} and {YourPassword} - with following CURL request: curl -X GET \" https://switch-test.wirecard.com/mswitch-server/v1/info/version \" -H \"accept: text/plain\" -u {YourUsername}:{YourPassword} Upon successful authentication, system responds with its version.","title":"Testing Environment"},{"location":"getting-started/#production-environment","text":"Wirecard ePOS PROD environment is available on the following URL: https://switch.wirecard.com/mswitch-server/","title":"Production Environment"},{"location":"glossary/","text":"Acronyms ePOS ISO mPOS POS Terminology A Acquirer B Basic Access Authentication Backend system I Issuer M Merchant P Partner Payment method Payment service provider Payment transaction (alias payment) - monetary transaction with specific amount, payment method and type. R Return S Sale Sale-Purchase Sale-Return T Transaction Transaction type U User","title":"Glossary"},{"location":"glossary/#acronyms","text":"ePOS ISO mPOS POS","title":"Acronyms"},{"location":"glossary/#terminology","text":"","title":"Terminology"},{"location":"glossary/#a","text":"Acquirer","title":"A"},{"location":"glossary/#b","text":"Basic Access Authentication Backend system","title":"B"},{"location":"glossary/#i","text":"Issuer","title":"I"},{"location":"glossary/#m","text":"Merchant","title":"M"},{"location":"glossary/#p","text":"Partner Payment method Payment service provider Payment transaction (alias payment) - monetary transaction with specific amount, payment method and type.","title":"P"},{"location":"glossary/#r","text":"Return","title":"R"},{"location":"glossary/#s","text":"Sale Sale-Purchase Sale-Return","title":"S"},{"location":"glossary/#t","text":"Transaction Transaction type","title":"T"},{"location":"glossary/#u","text":"User","title":"U"},{"location":"introduction/","text":"Welcome to Wirecard ePOS API Integration Guide Purpose of this integration guide is to provide step by step instructions on how to integrate to Wirecard ePOS solution via REST API. Note Payment acceptance functionality is usually a subset of a larger solution. Throughout this guide we therefore refer to the functionality you create via Wirecard ePOS API as the payment acceptance functionality, even though it may not be a standalone system. Who is this for? For organizations (we call them partners) who want to utilize Wirecard ePOS API in order to enhance their solution with payment acceptance functionality. Merchants are the actual end-users of the payment acceptance functionality. Tip If you are new to the payment industry there are a lot of terms to learn. So, the terms partner, merchant, user, payment acceptance application and many others are all defined in Glossary to help you with this task. Glossary has also definitions for the most common acronyms you find in this integration guide, such as Purchase, Return, Payment transaction and others. How much is covered? Our goal is to provide as much information as needed to successfully create a payment acceptance solution in the shortest possible time. Core Integration covers core functionality which has to be integrated. Advanced Integration covers value added functionality which is not mandatory. How technical is it? Partner team typically consists of a non-technical or semi-technical project manager and one or more developers who are technical. This guide is for the whole team so the information here ranges from non-technical to technical. What do I need to know? Following skills are required: understanding of REST API calls understanding of JSON objects","title":"Introduction"},{"location":"introduction/#welcome-to-wirecard-epos-api-integration-guide","text":"Purpose of this integration guide is to provide step by step instructions on how to integrate to Wirecard ePOS solution via REST API. Note Payment acceptance functionality is usually a subset of a larger solution. Throughout this guide we therefore refer to the functionality you create via Wirecard ePOS API as the payment acceptance functionality, even though it may not be a standalone system.","title":"Welcome to Wirecard ePOS API Integration Guide"},{"location":"introduction/#who-is-this-for","text":"For organizations (we call them partners) who want to utilize Wirecard ePOS API in order to enhance their solution with payment acceptance functionality. Merchants are the actual end-users of the payment acceptance functionality. Tip If you are new to the payment industry there are a lot of terms to learn. So, the terms partner, merchant, user, payment acceptance application and many others are all defined in Glossary to help you with this task. Glossary has also definitions for the most common acronyms you find in this integration guide, such as Purchase, Return, Payment transaction and others.","title":"Who is this for?"},{"location":"introduction/#how-much-is-covered","text":"Our goal is to provide as much information as needed to successfully create a payment acceptance solution in the shortest possible time. Core Integration covers core functionality which has to be integrated. Advanced Integration covers value added functionality which is not mandatory.","title":"How much is covered?"},{"location":"introduction/#how-technical-is-it","text":"Partner team typically consists of a non-technical or semi-technical project manager and one or more developers who are technical. This guide is for the whole team so the information here ranges from non-technical to technical.","title":"How technical is it?"},{"location":"introduction/#what-do-i-need-to-know","text":"Following skills are required: understanding of REST API calls understanding of JSON objects","title":"What do I need to know?"},{"location":"items/","text":"","title":"General"},{"location":"merchant-management/","text":"","title":"General"},{"location":"multi-tender/","text":"","title":"Multi-tender Model"},{"location":"sale-general/","text":"Sale Model In this chapter we will cover information needed to understand Wirecard ePOS Sale Model . Wirecard ePOS Sale Model distinguishes two types of Sale: Purchase - happens when end-consumer purchases goods or services Return - happens when end-consumer returns goods back to the retailer Additionally, Wirecard ePOS allows merchants to divide Purchase total amount to multiple payment transactions. Multi-tender model provides possibility to use any combination of payment methods. Note In payment industry domain terms multi-tender , multi-payment and split-payment can be considered as synonyms. In context of Wirecard ePOS API we refer to this functionality as Multi-tender model . In the following chapters you will find API requests and responses based on payment method you want to integrate: Cash Card Alipay WeChat If you look for integration of multiple payments in one Sale-Purchase , then see the Multi-tender model chapter which includes detailed API examples. Tip You have received user account credentials to TEST environment. You can check the received credentials - type them instead of {YourUsername} and {YourPassword} - with following CURL request: curl -X GET \" https://switch-test.wirecard.com/mswitch-server/v1/info/version \" -H \"accept: text/plain\" -u {YourUsername}:{YourPassword} Upon successful authentication, system responds with its version.","title":"General"},{"location":"sale-general/#sale-model","text":"In this chapter we will cover information needed to understand Wirecard ePOS Sale Model . Wirecard ePOS Sale Model distinguishes two types of Sale: Purchase - happens when end-consumer purchases goods or services Return - happens when end-consumer returns goods back to the retailer Additionally, Wirecard ePOS allows merchants to divide Purchase total amount to multiple payment transactions. Multi-tender model provides possibility to use any combination of payment methods. Note In payment industry domain terms multi-tender , multi-payment and split-payment can be considered as synonyms. In context of Wirecard ePOS API we refer to this functionality as Multi-tender model . In the following chapters you will find API requests and responses based on payment method you want to integrate: Cash Card Alipay WeChat If you look for integration of multiple payments in one Sale-Purchase , then see the Multi-tender model chapter which includes detailed API examples. Tip You have received user account credentials to TEST environment. You can check the received credentials - type them instead of {YourUsername} and {YourPassword} - with following CURL request: curl -X GET \" https://switch-test.wirecard.com/mswitch-server/v1/info/version \" -H \"accept: text/plain\" -u {YourUsername}:{YourPassword} Upon successful authentication, system responds with its version.","title":"Sale Model"},{"location":"shift_reports/","text":"","title":"Shift Report"},{"location":"terminal-management/","text":"","title":"Terminal management"},{"location":"user/","text":"User management Purpose of this chapter is to describe how can merchant manage its own users. User account is required as the whole communication with ePOS system is done via particular user account. ePOS backend API calls used for managing user accounts are described below: 1. Create a new user POST /v1/users with the example body: { \"username\": \"john.doe\", \"email\": \"john.doe@example.com\", \"firstName\": \"John\", \"lastName\": \"Doe\", \"merchant\": { \"id\": \"e5869bc0303b4dabbf1e593d619146dc\" }, \"password\": \"Password123!\", \"roles\": [ \"MERCHANT_ADMIN\" ], \"status\": \"ENABLED\", \"timeZone\": \"Europe/Berlin\" } User role defines what operations (API calls) are available to a particular user account. Wirecard ePOS backend provides following user roles: - Merchant Admin - see all merchant sales and can create new user accounts - Merchant Advanced User - see all merchant sales - Merchant User - see only own sales 2. List all user accounts GET /v1/users 3. Get a specific user account GET /v1/users/{userId}","title":"User Management"},{"location":"user/#user-management","text":"Purpose of this chapter is to describe how can merchant manage its own users. User account is required as the whole communication with ePOS system is done via particular user account. ePOS backend API calls used for managing user accounts are described below:","title":"User management"},{"location":"user/#1-create-a-new-user","text":"POST /v1/users with the example body: { \"username\": \"john.doe\", \"email\": \"john.doe@example.com\", \"firstName\": \"John\", \"lastName\": \"Doe\", \"merchant\": { \"id\": \"e5869bc0303b4dabbf1e593d619146dc\" }, \"password\": \"Password123!\", \"roles\": [ \"MERCHANT_ADMIN\" ], \"status\": \"ENABLED\", \"timeZone\": \"Europe/Berlin\" } User role defines what operations (API calls) are available to a particular user account. Wirecard ePOS backend provides following user roles: - Merchant Admin - see all merchant sales and can create new user accounts - Merchant Advanced User - see all merchant sales - Merchant User - see only own sales","title":"1. Create a new user"},{"location":"user/#2-list-all-user-accounts","text":"GET /v1/users","title":"2. List all user accounts"},{"location":"user/#3-get-a-specific-user-account","text":"GET /v1/users/{userId}","title":"3. Get a specific user account"},{"location":"wechat/","text":"WeChat Pay is one-step payment method in case end-consumer is not required to authorize the payment on his device. In case end-consumer has to authorize the payment with password or other equivalent (pin code, fingerprint, etc.) then we speak about two-step payment method. Tip For more details regarding WeChat Pay, visit Wirecard China Payment website. Note Sale requests are serviced at https://switch.wirecard.com/mswitch-server/v1/sales URL. Request Response","title":"WeChat Pay"}]}