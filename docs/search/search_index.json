{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Wirecard ePOS Wirecard ePOS is a unique cashier system which combines payment processing, smart cash-register and product catalogue functionality. Wirecard ePOS solution can be utilized in following ways: Wirecard ePOS API - for retailers who prefer direct API integration Wirecard ePOS SDK - for retailers who want to develop their own iOS or Android application Wirecard ePOS App - for retailers who prefer easy to use iOS or Android application Wirecard ePOS API Integration Guide If you wish to integrate via Wirecard ePOS API, please follow this integration guide. Wirecard ePOS SDK Integration Guide If you wish to integrate via Wirecard ePOS SDK, please follow the integration guide available at Wirecard ePOS SDK . Wirecard ePOS Application If you wish to benefit from Wirecard ePOS App, please download it at Apple App Store or Google Play Store . Tip Wirecard ePOS belongs to Wirecard portfolio of point of sale (POS) solutions. For complete information about all Wirecard products and solutions, please contact your Wirecard representative. If you don't know your Wirecard representative, please contact us now .","title":"Welcome"},{"location":"#welcome-to-wirecard-epos","text":"Wirecard ePOS is a unique cashier system which combines payment processing, smart cash-register and product catalogue functionality. Wirecard ePOS solution can be utilized in following ways: Wirecard ePOS API - for retailers who prefer direct API integration Wirecard ePOS SDK - for retailers who want to develop their own iOS or Android application Wirecard ePOS App - for retailers who prefer easy to use iOS or Android application Wirecard ePOS API Integration Guide If you wish to integrate via Wirecard ePOS API, please follow this integration guide. Wirecard ePOS SDK Integration Guide If you wish to integrate via Wirecard ePOS SDK, please follow the integration guide available at Wirecard ePOS SDK . Wirecard ePOS Application If you wish to benefit from Wirecard ePOS App, please download it at Apple App Store or Google Play Store . Tip Wirecard ePOS belongs to Wirecard portfolio of point of sale (POS) solutions. For complete information about all Wirecard products and solutions, please contact your Wirecard representative. If you don't know your Wirecard representative, please contact us now .","title":"Welcome to Wirecard ePOS"},{"location":"advanced_overview/","text":"Advanced Integration chapter guides you through advanced information for partners who want to provide value added services on top of payment acceptance functionality.","title":"Overview"},{"location":"alipay/","text":"Wirecard makes it easy to accept Alipay, one of the most popular payment platforms in China. As Chinese tourism expands, accepting Alipay payments opens up fresh opportunities to increase revenues. Tip Visit Wirecard website to find out all benefits of Alipay payment. From merchant perspective, Alipay payment is very straightforward. Only one request is needed to successfully complete Alipay payment. Workflow Note Purchase requests are serviced at following URL: https://switch.wirecard.com/mswitch-server/v1/sales In context of Wirecard ePOS, term Purchase is used for both: type of Sale - called Sale-Purchase - created by request with PURCHASE operation transaction type - cash purchase transaction, card purchase transaction, alipay purchase transaction and wechat purchase transaction Purchase Operation In order to process Alipay payment, make a POST /v1/sales call: Request { \"multitender\": \"true\", \"operation\" : \"PURCHASE\", \"externalId\": \"123456789\", \"totalAmount\" : 10, \"currencyCode\" : \"EUR\", \"payments\" : [ { \"paymentMethod\" : \"ALIPAY\", \"transactionType\" : \"PURCHASE\", \"amount\" : 10, \"consumerId\" : \"28050011719660761\" } ] } \"multitender\" - boolean flag \"TRUE\" - required \"FALSE\" - deprecated \"operation\" - defines type of Sale request; PURCHASE operation creates Sale-Purchase record \"externalId\" - optional field - used for merchant tracking purposes; it is forwarded to payment gateway \"totalAmount\" - defines amount of Sale-Purchase \"currencyCode\" - defines currency, based on ISO 4217 standard \"payments\" - includes payment-specific information \"paymentMethod\" - defines payment method \"transactionType\" - defines type of transaction; PURCHASE transaction moves funds from end-consumer to merchant \"amount\" - defines transaction amount \"consumerId\" - value of scanned barcode (QR code) Response Status Code 1000 indicates that Alipay purchase transaction is completed successfully. { \"operation\": \"PURCHASE\", \"timeStamp\": \"2019-04-12T12:27:43.069Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"a66bbac362404fcc9c08868f881f94d9\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"ALIPAY\", \"transactionType\": \"PURCHASE\", \"id\": \"a2a688bafd0e43a5965ec639daf17dc7\", \"timeStamp\": \"2019-04-12T12:27:42.963Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"alipayPayTime\": \"20190412202742\", \"alipayTransId\": \"2019041220001004050261859239\", \"alipayBuyerLoginId\": \"int*@service.*\", \"exchangeRate\": 6.9187, \"transAmountCny\": 691.87, \"merchantName\": \"MA-SWITCH-01\", \"terminalId\": \"1234567\", \"gatewayReference\": \"20e66beb-b47a-4d51-9ea6-31e30ca6a040\" } ], \"externalId\": \"123456789\", \"merchantReceiptId\": 250, \"multitender\": true } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful \"result\" - \"SUCCESS\" means operation is successful \"id\" - Sale-Purchase identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - includes payment-specific information \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"alipayPayTime\" - date-time in Alipay system \"alipayTransId\" - identifier of transaction assigned by Alipay System \"alipayBuyerLoginId\" - identifier of end-consumer (buyer) in Alipay system \"exchangeRate\" - exchange rate between processing currency and CNY (Chinese Yuan) \"transAmountCny\" - amount in CNY (Chinese Yuan) \"merchantName\" - merchant name in Alipay system \"terminalId\" - terminal identifier \"gatewayReference\" - identifier of transaction assigned by Wirecard payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier for merchant; it is incremented with Sale-Purchase and Sale-Return; it is advised to be printed on receipt as a barcode \"multitender\" - echoed from request Important After successful response, making GET /v1/sales/{id} call is advised, as it provides all information. Reverse Operation REVERSE operation is typically used in case purchase transaction was created accidentally and hence needs to be reversed. In order to reverse Alipay purchase transaction, make a POST /v1/sales call: Request { \"operation\": \"REVERSE\", \"originalSaleId\": \"a66bbac362404fcc9c08868f881f94d9\", \"payments\": [ { \"paymentMethod\": \"ALIPAY\", \"transactionType\": \"REVERSAL\", \"originalTransactionId\" : \"a2a688bafd0e43a5965ec639daf17dc7\" } ] } \"operation\" - defines type of Sale request \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - includes payment-specific information \"paymentMethod\" - defines payment method; must be same as original payment method \"transactionType\" - defines type of transaction; REVERSE operation must include REVERSAL transaction type \"originalTransactionId\" - identifier of original purchase transaction Response { \"operation\": \"REVERSE\", \"timeStamp\": \"2019-04-12T12:27:59.86Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"a66bbac362404fcc9c08868f881f94d9\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"ALIPAY\", \"transactionType\": \"REVERSAL\", \"id\": \"3a91fdb770004ba687c006fe2f2e122b\", \"timeStamp\": \"2019-04-12T12:27:59.817Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"alipayPayTime\": \"20190412202742\", \"alipayTransId\": \"2019041220001004050261859239\", \"alipayBuyerLoginId\": \"int*@service.*\", \"exchangeRate\": 6.9187, \"transAmountCny\": 691.87, \"merchantName\": \"MA-SWITCH-01\", \"terminalId\": \"1234567\", \"alipayCancelTime\": \"20190412202759\", \"gatewayReference\": \"49e3a790-874f-49ed-b690-e553b59249d6\" } ] } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful \"result\" - \"SUCCESS\" means operation is successful \"id\" - Sale-Purchase identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - includes payment-specific information \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of reversal transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"alipayPayTime\" - date-time in Alipay system \"alipayTransId\" - identifier of transaction assigned by Alipay System \"alipayBuyerLoginId\" - identifier of end-consumer (buyer) in Alipay system \"exchangeRate\" - exchange rate between processing currency and CNY (Chinese Yuan) \"transAmountCny\" - amount in CNY (Chinese Yuan) \"merchantName\" - merchant name in Alipay system \"terminalId\" - terminal identifier \"alipayCancelTime\" - reversal date-time in Alipay system \"gatewayReference\" - identifier of transaction assigned by Wirecard payment gateway In order to explicitly change state of Sale-Purchase to CANCELED , make a POST /v1/sales call with CANCEL operation . Return Operation RETURN operation is used in case end-consumer returns merchandise and asks for a refund. Wirecard ePOS support partial as well as full return. In order to process Alipay refund transaction, make a POST /v1/sales call defined below: Request { \"operation\" : \"RETURN\", \"totalAmount\" : 100, \"currencyCode\" : \"EUR\", \"originalSaleId\" : \"d79dc95ee0e041ed8657a763cafded51\", \"payments\" : [ { \"paymentMethod\" : \"ALIPAY\", \"transactionType\" : \"REFERENCE_REFUND\", \"amount\" : 100, \"originalTransactionId\" : \"b1c4a37810ac43f598f29450c760b90d\" } ] } \"operation\" - defines type of Sale request; RETURN operation creates new Sale-Return record \"totalAmount\" - defines amount to be refunded; it can be equal (full return) or less (partial return) than totalAmount in original Sale-Purchase \"currencyCode\" - must be same as for original Sale-Purchase \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - includes payment-specific information \"paymentMethod\" - defines payment method \"transactionType\" - defines type of transaction; must be REFERENCE_REFUND when payment method is ALIPAY \"amount\" - defines amount to be refunded \"originalTransactionId\" - identifier of original Alipay purchase transaction which will be refunded Response { \"operation\": \"RETURN\", \"timeStamp\": \"2019-04-12T12:52:30.218Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"d79dc95ee0e041ed8657a763cafded51\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"ALIPAY\", \"transactionType\": \"REFERENCE_REFUND\", \"id\": \"8516d319573146a0a4853b48482ce0d5\", \"timeStamp\": \"2019-04-12T12:52:30.092Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"alipayPayTime\": \"20190412205203\", \"alipayTransId\": \"2019041220001004050261859239\", \"alipayBuyerLoginId\": \"int*@service.*\", \"exchangeRate\": 6.9187, \"transAmountCny\": 691.87, \"merchantName\": \"MA-SWITCH-01\", \"terminalId\": \"1234567\", \"refundAmountCny\": 691.87, \"refundExchangeRate\": 6.9187, \"gatewayReference\": \"0f27700f-29db-4843-b73c-ffba2442e7f4\" } ], \"externalId\": null, \"merchantReceiptId\": 252 } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful \"result\" - \"SUCCESS\" means operation is successful \"id\" - Sale-Return identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - includes payment-specific information \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of refund transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"alipayPayTime\" - date-time in Alipay system \"alipayTransId\" - identifier of transaction assigned by Alipay System \"alipayBuyerLoginId\" - identifier of end-consumer (buyer) in Alipay system \"exchangeRate\" - exchange rate between processing currency and CNY (Chinese Yuan) \"transAmountCny\" - amount in CNY (Chinese Yuan) \"merchantName\" - merchant name in Alipay system \"terminalId\" - terminal identifier \"gatewayReference\" - identifier of transaction assigned by Wirecard payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier for merchant; it is incremented with every Sale-Purchase and Sale-Return; it is advised to be printed on receipt as a barcode Tip To see all /v1/sales request & response examples, click here . GET a Sale Call You can see below an example of GET a Sale call with excluded merchant and user fields which are going to be described in Merchant Management and User Management respectively. GET https://switch-test.wirecard.com/mswitch-server/v1/sales/6434f3ee5f404fec89d95c7f8538ac68?excludeField=merchant&excludeField=user { \"id\": \"6434f3ee5f404fec89d95c7f8538ac68\", \"type\": \"PURCHASE\", \"status\": \"COMPLETED\", \"totalAmount\": 100, \"note\": null, \"externalId\": null, \"externalCashierId\": null, \"customerId\": null, \"initialized\": \"2019-04-12T13:23:48.571Z\", \"shop\": null, \"currency\": { \"number\": 978, \"code\": \"EUR\", \"name\": \"Euro\", \"minorUnit\": 2 }, \"unitPricesIncludeTax\": null, \"items\": [ ], \"transactions\": [ { \"type\": \"ALIPAY_PURCHASE\", \"id\": \"587b078f93c849a2a1915c7c396cf15d\", \"status\": \"COMPLETED\", \"amount\": 100, \"lastUpdated\": \"2019-04-12T13:23:48.66Z\", \"initialized\": \"2019-04-12T13:23:48.573Z\", \"message\": \"The resource was successfully created on Alipay side.\", \"gateway\": { \"id\": \"wdEeSimulated\", \"name\": \"Wirecard EE Simulated\", \"type\": \"WIRECARD_EE_SIMULATED\", \"url\": \"http://dummy\" }, \"gatewayReference\": \"f40369c5-3f88-4492-8d23-268d3c4f14dc\", \"processedByGateway\": \"2019-04-12T13:23:48.644Z\", \"alipayPayTime\": \"20190412212348\", \"alipayTransId\": \"2019041221001004050261859239\", \"alipayBuyerLoginId\": \"int*@service.*\", \"exchangeRate\": 6.9187, \"transAmountCny\": 691.87, \"merchantName\": \"MA-SWITCH-01\", \"terminalId\": \"1234567\", \"alipayConsumerAccountId\": \"2088122878784050\", \"autoResolveTransactions\": [ ], \"transactionBarcodeId\": \"28050011719660761\" } ], \"location\": null, \"clientInfo\": null, \"merchantReceiptId\": 254, \"cancelledBy\": null, \"shiftId\": null, \"cashRegisterId\": null, \"emailForReceiptProvided\": false, \"multitender\": true }","title":"Alipay"},{"location":"alipay/#workflow","text":"Note Purchase requests are serviced at following URL: https://switch.wirecard.com/mswitch-server/v1/sales In context of Wirecard ePOS, term Purchase is used for both: type of Sale - called Sale-Purchase - created by request with PURCHASE operation transaction type - cash purchase transaction, card purchase transaction, alipay purchase transaction and wechat purchase transaction","title":"Workflow"},{"location":"alipay/#purchase-operation","text":"In order to process Alipay payment, make a POST /v1/sales call:","title":"Purchase Operation"},{"location":"alipay/#request","text":"{ \"multitender\": \"true\", \"operation\" : \"PURCHASE\", \"externalId\": \"123456789\", \"totalAmount\" : 10, \"currencyCode\" : \"EUR\", \"payments\" : [ { \"paymentMethod\" : \"ALIPAY\", \"transactionType\" : \"PURCHASE\", \"amount\" : 10, \"consumerId\" : \"28050011719660761\" } ] } \"multitender\" - boolean flag \"TRUE\" - required \"FALSE\" - deprecated \"operation\" - defines type of Sale request; PURCHASE operation creates Sale-Purchase record \"externalId\" - optional field - used for merchant tracking purposes; it is forwarded to payment gateway \"totalAmount\" - defines amount of Sale-Purchase \"currencyCode\" - defines currency, based on ISO 4217 standard \"payments\" - includes payment-specific information \"paymentMethod\" - defines payment method \"transactionType\" - defines type of transaction; PURCHASE transaction moves funds from end-consumer to merchant \"amount\" - defines transaction amount \"consumerId\" - value of scanned barcode (QR code)","title":"Request"},{"location":"alipay/#response","text":"Status Code 1000 indicates that Alipay purchase transaction is completed successfully. { \"operation\": \"PURCHASE\", \"timeStamp\": \"2019-04-12T12:27:43.069Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"a66bbac362404fcc9c08868f881f94d9\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"ALIPAY\", \"transactionType\": \"PURCHASE\", \"id\": \"a2a688bafd0e43a5965ec639daf17dc7\", \"timeStamp\": \"2019-04-12T12:27:42.963Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"alipayPayTime\": \"20190412202742\", \"alipayTransId\": \"2019041220001004050261859239\", \"alipayBuyerLoginId\": \"int*@service.*\", \"exchangeRate\": 6.9187, \"transAmountCny\": 691.87, \"merchantName\": \"MA-SWITCH-01\", \"terminalId\": \"1234567\", \"gatewayReference\": \"20e66beb-b47a-4d51-9ea6-31e30ca6a040\" } ], \"externalId\": \"123456789\", \"merchantReceiptId\": 250, \"multitender\": true } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful \"result\" - \"SUCCESS\" means operation is successful \"id\" - Sale-Purchase identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - includes payment-specific information \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"alipayPayTime\" - date-time in Alipay system \"alipayTransId\" - identifier of transaction assigned by Alipay System \"alipayBuyerLoginId\" - identifier of end-consumer (buyer) in Alipay system \"exchangeRate\" - exchange rate between processing currency and CNY (Chinese Yuan) \"transAmountCny\" - amount in CNY (Chinese Yuan) \"merchantName\" - merchant name in Alipay system \"terminalId\" - terminal identifier \"gatewayReference\" - identifier of transaction assigned by Wirecard payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier for merchant; it is incremented with Sale-Purchase and Sale-Return; it is advised to be printed on receipt as a barcode \"multitender\" - echoed from request Important After successful response, making GET /v1/sales/{id} call is advised, as it provides all information.","title":"Response"},{"location":"alipay/#reverse-operation","text":"REVERSE operation is typically used in case purchase transaction was created accidentally and hence needs to be reversed. In order to reverse Alipay purchase transaction, make a POST /v1/sales call:","title":"Reverse Operation"},{"location":"alipay/#request_1","text":"{ \"operation\": \"REVERSE\", \"originalSaleId\": \"a66bbac362404fcc9c08868f881f94d9\", \"payments\": [ { \"paymentMethod\": \"ALIPAY\", \"transactionType\": \"REVERSAL\", \"originalTransactionId\" : \"a2a688bafd0e43a5965ec639daf17dc7\" } ] } \"operation\" - defines type of Sale request \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - includes payment-specific information \"paymentMethod\" - defines payment method; must be same as original payment method \"transactionType\" - defines type of transaction; REVERSE operation must include REVERSAL transaction type \"originalTransactionId\" - identifier of original purchase transaction","title":"Request"},{"location":"alipay/#response_1","text":"{ \"operation\": \"REVERSE\", \"timeStamp\": \"2019-04-12T12:27:59.86Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"a66bbac362404fcc9c08868f881f94d9\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"ALIPAY\", \"transactionType\": \"REVERSAL\", \"id\": \"3a91fdb770004ba687c006fe2f2e122b\", \"timeStamp\": \"2019-04-12T12:27:59.817Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"alipayPayTime\": \"20190412202742\", \"alipayTransId\": \"2019041220001004050261859239\", \"alipayBuyerLoginId\": \"int*@service.*\", \"exchangeRate\": 6.9187, \"transAmountCny\": 691.87, \"merchantName\": \"MA-SWITCH-01\", \"terminalId\": \"1234567\", \"alipayCancelTime\": \"20190412202759\", \"gatewayReference\": \"49e3a790-874f-49ed-b690-e553b59249d6\" } ] } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful \"result\" - \"SUCCESS\" means operation is successful \"id\" - Sale-Purchase identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - includes payment-specific information \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of reversal transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"alipayPayTime\" - date-time in Alipay system \"alipayTransId\" - identifier of transaction assigned by Alipay System \"alipayBuyerLoginId\" - identifier of end-consumer (buyer) in Alipay system \"exchangeRate\" - exchange rate between processing currency and CNY (Chinese Yuan) \"transAmountCny\" - amount in CNY (Chinese Yuan) \"merchantName\" - merchant name in Alipay system \"terminalId\" - terminal identifier \"alipayCancelTime\" - reversal date-time in Alipay system \"gatewayReference\" - identifier of transaction assigned by Wirecard payment gateway In order to explicitly change state of Sale-Purchase to CANCELED , make a POST /v1/sales call with CANCEL operation .","title":"Response"},{"location":"alipay/#return-operation","text":"RETURN operation is used in case end-consumer returns merchandise and asks for a refund. Wirecard ePOS support partial as well as full return. In order to process Alipay refund transaction, make a POST /v1/sales call defined below:","title":"Return Operation"},{"location":"alipay/#request_2","text":"{ \"operation\" : \"RETURN\", \"totalAmount\" : 100, \"currencyCode\" : \"EUR\", \"originalSaleId\" : \"d79dc95ee0e041ed8657a763cafded51\", \"payments\" : [ { \"paymentMethod\" : \"ALIPAY\", \"transactionType\" : \"REFERENCE_REFUND\", \"amount\" : 100, \"originalTransactionId\" : \"b1c4a37810ac43f598f29450c760b90d\" } ] } \"operation\" - defines type of Sale request; RETURN operation creates new Sale-Return record \"totalAmount\" - defines amount to be refunded; it can be equal (full return) or less (partial return) than totalAmount in original Sale-Purchase \"currencyCode\" - must be same as for original Sale-Purchase \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - includes payment-specific information \"paymentMethod\" - defines payment method \"transactionType\" - defines type of transaction; must be REFERENCE_REFUND when payment method is ALIPAY \"amount\" - defines amount to be refunded \"originalTransactionId\" - identifier of original Alipay purchase transaction which will be refunded","title":"Request"},{"location":"alipay/#response_2","text":"{ \"operation\": \"RETURN\", \"timeStamp\": \"2019-04-12T12:52:30.218Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"d79dc95ee0e041ed8657a763cafded51\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"ALIPAY\", \"transactionType\": \"REFERENCE_REFUND\", \"id\": \"8516d319573146a0a4853b48482ce0d5\", \"timeStamp\": \"2019-04-12T12:52:30.092Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"alipayPayTime\": \"20190412205203\", \"alipayTransId\": \"2019041220001004050261859239\", \"alipayBuyerLoginId\": \"int*@service.*\", \"exchangeRate\": 6.9187, \"transAmountCny\": 691.87, \"merchantName\": \"MA-SWITCH-01\", \"terminalId\": \"1234567\", \"refundAmountCny\": 691.87, \"refundExchangeRate\": 6.9187, \"gatewayReference\": \"0f27700f-29db-4843-b73c-ffba2442e7f4\" } ], \"externalId\": null, \"merchantReceiptId\": 252 } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful \"result\" - \"SUCCESS\" means operation is successful \"id\" - Sale-Return identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - includes payment-specific information \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of refund transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"alipayPayTime\" - date-time in Alipay system \"alipayTransId\" - identifier of transaction assigned by Alipay System \"alipayBuyerLoginId\" - identifier of end-consumer (buyer) in Alipay system \"exchangeRate\" - exchange rate between processing currency and CNY (Chinese Yuan) \"transAmountCny\" - amount in CNY (Chinese Yuan) \"merchantName\" - merchant name in Alipay system \"terminalId\" - terminal identifier \"gatewayReference\" - identifier of transaction assigned by Wirecard payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier for merchant; it is incremented with every Sale-Purchase and Sale-Return; it is advised to be printed on receipt as a barcode Tip To see all /v1/sales request & response examples, click here .","title":"Response"},{"location":"alipay/#get-a-sale-call","text":"You can see below an example of GET a Sale call with excluded merchant and user fields which are going to be described in Merchant Management and User Management respectively. GET https://switch-test.wirecard.com/mswitch-server/v1/sales/6434f3ee5f404fec89d95c7f8538ac68?excludeField=merchant&excludeField=user { \"id\": \"6434f3ee5f404fec89d95c7f8538ac68\", \"type\": \"PURCHASE\", \"status\": \"COMPLETED\", \"totalAmount\": 100, \"note\": null, \"externalId\": null, \"externalCashierId\": null, \"customerId\": null, \"initialized\": \"2019-04-12T13:23:48.571Z\", \"shop\": null, \"currency\": { \"number\": 978, \"code\": \"EUR\", \"name\": \"Euro\", \"minorUnit\": 2 }, \"unitPricesIncludeTax\": null, \"items\": [ ], \"transactions\": [ { \"type\": \"ALIPAY_PURCHASE\", \"id\": \"587b078f93c849a2a1915c7c396cf15d\", \"status\": \"COMPLETED\", \"amount\": 100, \"lastUpdated\": \"2019-04-12T13:23:48.66Z\", \"initialized\": \"2019-04-12T13:23:48.573Z\", \"message\": \"The resource was successfully created on Alipay side.\", \"gateway\": { \"id\": \"wdEeSimulated\", \"name\": \"Wirecard EE Simulated\", \"type\": \"WIRECARD_EE_SIMULATED\", \"url\": \"http://dummy\" }, \"gatewayReference\": \"f40369c5-3f88-4492-8d23-268d3c4f14dc\", \"processedByGateway\": \"2019-04-12T13:23:48.644Z\", \"alipayPayTime\": \"20190412212348\", \"alipayTransId\": \"2019041221001004050261859239\", \"alipayBuyerLoginId\": \"int*@service.*\", \"exchangeRate\": 6.9187, \"transAmountCny\": 691.87, \"merchantName\": \"MA-SWITCH-01\", \"terminalId\": \"1234567\", \"alipayConsumerAccountId\": \"2088122878784050\", \"autoResolveTransactions\": [ ], \"transactionBarcodeId\": \"28050011719660761\" } ], \"location\": null, \"clientInfo\": null, \"merchantReceiptId\": 254, \"cancelledBy\": null, \"shiftId\": null, \"cashRegisterId\": null, \"emailForReceiptProvided\": false, \"multitender\": true }","title":"GET a Sale Call"},{"location":"card/","text":"Documentation in-progress.","title":"Card"},{"location":"cash/","text":"Cash is the most straightforward payment method to integrate. Tip Visit Wirecard website to find out all benefits of Wirecard ePOS solution. Workflow Note Purchase requests are serviced at following URL: https://switch.wirecard.com/mswitch-server/v1/sales In context of Wirecard ePOS, term Purchase is used for both: type of Sale - called Sale-Purchase - created by request with PURCHASE operation transaction type - cash purchase transaction, card purchase transaction, alipay purchase transaction and wechat purchase transaction Purchase Operation In order to process cash payment, make a POST /v1/sales call: Request { \"multitender\": \"true\", \"operation\" : \"PURCHASE\", \"totalAmount\" : 10.0, \"currencyCode\" : \"EUR\", \"payments\" : [ { \"paymentMethod\" : \"CASH\", \"transactionType\" : \"PURCHASE\", \"amount\" : 10.0 } ] } \"multitender\" - boolean flag \"TRUE\" - required \"FALSE\" - deprecated \"operation\" - defines type of operation; PURCHASE operation creates new Sale-Purchase record \"totalAmount\" - total amount of Sale-Purchase \"currencyCode\" - defines currency, based on ISO 4217 standard \"payments\" - includes payment-specific information \"paymentMethod\" - defines payment method \"transactionType\" - defines type of transaction; PURCHASE transaction moves funds from end-consumer to merchant \"amount\" - defines transaction amount Response { \"operation\": \"PURCHASE\", \"timeStamp\": \"2019-04-10T09:41:39.597Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"bdb7dd5566f043ab9b91108863a6e833\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"CASH\", \"transactionType\": \"PURCHASE\", \"id\": \"2d08be0814f04cc1a2b2b9b5cd1273e2\", \"timeStamp\": \"2019-04-10T09:41:39.554Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ] } ], \"externalId\": null, \"merchantReceiptId\": 457, \"multitender\": true } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful \"result\" - \"SUCCESS\" means operation is successful \"id\" - Sale-Purchase identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - includes payment-specific information \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier for merchant; it is incremented with Sale-Purchase and Sale-Return; it is advised to be printed on receipt as a barcode \"multitender\" - echoed from request Important After successful response, making GET /v1/sales/{id} call is advised, as it provides all information. Reverse Operation REVERSE operation is typically used in case purchase transaction was created accidentally and hence needs to be reversed. In order to reverse cash purchase transaction, make a POST /v1/sales call: Request { \"operation\": \"REVERSE\", \"originalSaleId\": \"bdb7dd5566f043ab9b91108863a6e833\", \"payments\": [ { \"paymentMethod\": \"CASH\", \"transactionType\": \"REVERSAL\", \"originalTransactionId\" : \"2d08be0814f04cc1a2b2b9b5cd1273e2\" } ] } \"operation\" - defines type of operation \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - includes payment-specific information \"paymentMethod\" - defines payment method; must be same as original payment method \"transactionType\" - defines type of transaction; REVERSE operation must include REVERSAL transaction type \"originalTransactionId\" - identifier of original purchase transaction Response { \"operation\": \"REVERSE\", \"timeStamp\": \"2019-04-11T06:49:51.541Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"bdb7dd5566f043ab9b91108863a6e833\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"CASH\", \"transactionType\": \"REVERSAL\", \"id\": \"6f5789c304594fe8a796d5b2bdaebbf0\", \"timeStamp\": \"2019-04-11T06:49:51.532Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ] } ] } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful \"result\" - \"SUCCESS\" means operation is successful \"id\" - echoed from request \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - includes payment-specific information \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of reversal transaction \"timeStamp\" - date-time when reversal transaction was processed \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway In order to explicitly change state of Sale-Purchase to CANCELED , make a POST /v1/sales call with CANCEL operation . Return Operation RETURN operation is used in case end-consumer returns merchandise and asks for a refund. Wirecard ePOS support partial as well as full return. In order to process cash refund transaction, make a POST /v1/sales call defined below: Request { \"operation\" : \"RETURN\", \"totalAmount\" : 10, \"currencyCode\" : \"EUR\", \"originalSaleId\" : \"344009e1f53a4dd0af9751f0b7d7d99d\", \"payments\" : [ { \"paymentMethod\" : \"CASH\", \"transactionType\" : \"REFUND\", \"amount\" : 10 } ] } \"operation\" - defines type of operation; RETURN operation creates new Sale-Return record \"totalAmount\" - defines amount to be refunded; it can be equal (full return) or less (partial return) than totalAmount in original Sale-Purchase \"currencyCode\" - must be same as for original Sale-Purchase \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - includes payment-specific information \"paymentMethod\" - defines payment method \"transactionType\" - defines type of transaction; must be REFUND when payment method is CASH \"amount\" - defines amount to be refunded Response { \"operation\": \"RETURN\", \"timeStamp\": \"2019-04-11T09:55:15.594Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"5c0e6ef0da784b8c940b488ef6f0cb8b\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"CASH\", \"transactionType\": \"REFUND\", \"id\": \"2fec6d42713a4703a4422b1359c2b588\", \"timeStamp\": \"2019-04-11T09:55:15.575Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ] } ], \"externalId\": \"20190411001\", \"merchantReceiptId\": 467 } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful \"result\" - \"SUCCESS\" means operation is successful \"id\" - Sale-Return identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - includes payment-specific information \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of refund transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier for merchant; it is incremented with every Sale-Purchase and Sale-Return; it is advised to be printed on receipt as a barcode Tip To see all /v1/sales request & response examples, click here . Get a Sale call Example of GET /v1/sales/{id} call with excluded merchant and user fields (described in Merchant Management and User Management respectively): GET https://switch-test.wirecard.com/mswitch-server/v1/sales/19267cf3a3cb4e2d8131917b5c092a0d?excludeField=merchant&excludeField=user { \"id\": \"19267cf3a3cb4e2d8131917b5c092a0d\", \"type\": \"PURCHASE\", \"status\": \"COMPLETED\", \"totalAmount\": 10, \"note\": null, \"externalId\": null, \"externalCashierId\": null, \"customerId\": null, \"initialized\": \"2019-04-11T13:36:11.521Z\", \"shop\": null, \"currency\": { \"number\": 978, \"code\": \"EUR\", \"name\": \"Euro\", \"minorUnit\": 2 }, \"unitPricesIncludeTax\": null, \"items\": [ ], \"transactions\": [ { \"type\": \"CASH_PURCHASE\", \"id\": \"7a8f701dd40743e0ad942ae32cd0e9d8\", \"status\": \"COMPLETED\", \"amount\": 10, \"lastUpdated\": \"2019-04-11T13:36:11.597Z\", \"initialized\": \"2019-04-11T13:36:11.521Z\", \"message\": null } ], \"location\": null, \"clientInfo\": null, \"merchantReceiptId\": 245, \"cancelledBy\": null, \"shiftId\": null, \"cashRegisterId\": null, \"emailForReceipt\": null, \"emailForReceiptProvided\": false, \"multitender\": true }","title":"Cash"},{"location":"cash/#workflow","text":"Note Purchase requests are serviced at following URL: https://switch.wirecard.com/mswitch-server/v1/sales In context of Wirecard ePOS, term Purchase is used for both: type of Sale - called Sale-Purchase - created by request with PURCHASE operation transaction type - cash purchase transaction, card purchase transaction, alipay purchase transaction and wechat purchase transaction","title":"Workflow"},{"location":"cash/#purchase-operation","text":"In order to process cash payment, make a POST /v1/sales call:","title":"Purchase Operation"},{"location":"cash/#request","text":"{ \"multitender\": \"true\", \"operation\" : \"PURCHASE\", \"totalAmount\" : 10.0, \"currencyCode\" : \"EUR\", \"payments\" : [ { \"paymentMethod\" : \"CASH\", \"transactionType\" : \"PURCHASE\", \"amount\" : 10.0 } ] } \"multitender\" - boolean flag \"TRUE\" - required \"FALSE\" - deprecated \"operation\" - defines type of operation; PURCHASE operation creates new Sale-Purchase record \"totalAmount\" - total amount of Sale-Purchase \"currencyCode\" - defines currency, based on ISO 4217 standard \"payments\" - includes payment-specific information \"paymentMethod\" - defines payment method \"transactionType\" - defines type of transaction; PURCHASE transaction moves funds from end-consumer to merchant \"amount\" - defines transaction amount","title":"Request"},{"location":"cash/#response","text":"{ \"operation\": \"PURCHASE\", \"timeStamp\": \"2019-04-10T09:41:39.597Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"bdb7dd5566f043ab9b91108863a6e833\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"CASH\", \"transactionType\": \"PURCHASE\", \"id\": \"2d08be0814f04cc1a2b2b9b5cd1273e2\", \"timeStamp\": \"2019-04-10T09:41:39.554Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ] } ], \"externalId\": null, \"merchantReceiptId\": 457, \"multitender\": true } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful \"result\" - \"SUCCESS\" means operation is successful \"id\" - Sale-Purchase identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - includes payment-specific information \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier for merchant; it is incremented with Sale-Purchase and Sale-Return; it is advised to be printed on receipt as a barcode \"multitender\" - echoed from request Important After successful response, making GET /v1/sales/{id} call is advised, as it provides all information.","title":"Response"},{"location":"cash/#reverse-operation","text":"REVERSE operation is typically used in case purchase transaction was created accidentally and hence needs to be reversed. In order to reverse cash purchase transaction, make a POST /v1/sales call:","title":"Reverse Operation"},{"location":"cash/#request_1","text":"{ \"operation\": \"REVERSE\", \"originalSaleId\": \"bdb7dd5566f043ab9b91108863a6e833\", \"payments\": [ { \"paymentMethod\": \"CASH\", \"transactionType\": \"REVERSAL\", \"originalTransactionId\" : \"2d08be0814f04cc1a2b2b9b5cd1273e2\" } ] } \"operation\" - defines type of operation \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - includes payment-specific information \"paymentMethod\" - defines payment method; must be same as original payment method \"transactionType\" - defines type of transaction; REVERSE operation must include REVERSAL transaction type \"originalTransactionId\" - identifier of original purchase transaction","title":"Request"},{"location":"cash/#response_1","text":"{ \"operation\": \"REVERSE\", \"timeStamp\": \"2019-04-11T06:49:51.541Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"bdb7dd5566f043ab9b91108863a6e833\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"CASH\", \"transactionType\": \"REVERSAL\", \"id\": \"6f5789c304594fe8a796d5b2bdaebbf0\", \"timeStamp\": \"2019-04-11T06:49:51.532Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ] } ] } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful \"result\" - \"SUCCESS\" means operation is successful \"id\" - echoed from request \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - includes payment-specific information \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of reversal transaction \"timeStamp\" - date-time when reversal transaction was processed \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway In order to explicitly change state of Sale-Purchase to CANCELED , make a POST /v1/sales call with CANCEL operation .","title":"Response"},{"location":"cash/#return-operation","text":"RETURN operation is used in case end-consumer returns merchandise and asks for a refund. Wirecard ePOS support partial as well as full return. In order to process cash refund transaction, make a POST /v1/sales call defined below:","title":"Return Operation"},{"location":"cash/#request_2","text":"{ \"operation\" : \"RETURN\", \"totalAmount\" : 10, \"currencyCode\" : \"EUR\", \"originalSaleId\" : \"344009e1f53a4dd0af9751f0b7d7d99d\", \"payments\" : [ { \"paymentMethod\" : \"CASH\", \"transactionType\" : \"REFUND\", \"amount\" : 10 } ] } \"operation\" - defines type of operation; RETURN operation creates new Sale-Return record \"totalAmount\" - defines amount to be refunded; it can be equal (full return) or less (partial return) than totalAmount in original Sale-Purchase \"currencyCode\" - must be same as for original Sale-Purchase \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - includes payment-specific information \"paymentMethod\" - defines payment method \"transactionType\" - defines type of transaction; must be REFUND when payment method is CASH \"amount\" - defines amount to be refunded","title":"Request"},{"location":"cash/#response_2","text":"{ \"operation\": \"RETURN\", \"timeStamp\": \"2019-04-11T09:55:15.594Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"5c0e6ef0da784b8c940b488ef6f0cb8b\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"CASH\", \"transactionType\": \"REFUND\", \"id\": \"2fec6d42713a4703a4422b1359c2b588\", \"timeStamp\": \"2019-04-11T09:55:15.575Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ] } ], \"externalId\": \"20190411001\", \"merchantReceiptId\": 467 } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful \"result\" - \"SUCCESS\" means operation is successful \"id\" - Sale-Return identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - includes payment-specific information \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of refund transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier for merchant; it is incremented with every Sale-Purchase and Sale-Return; it is advised to be printed on receipt as a barcode Tip To see all /v1/sales request & response examples, click here .","title":"Response"},{"location":"cash/#get-a-sale-call","text":"Example of GET /v1/sales/{id} call with excluded merchant and user fields (described in Merchant Management and User Management respectively): GET https://switch-test.wirecard.com/mswitch-server/v1/sales/19267cf3a3cb4e2d8131917b5c092a0d?excludeField=merchant&excludeField=user { \"id\": \"19267cf3a3cb4e2d8131917b5c092a0d\", \"type\": \"PURCHASE\", \"status\": \"COMPLETED\", \"totalAmount\": 10, \"note\": null, \"externalId\": null, \"externalCashierId\": null, \"customerId\": null, \"initialized\": \"2019-04-11T13:36:11.521Z\", \"shop\": null, \"currency\": { \"number\": 978, \"code\": \"EUR\", \"name\": \"Euro\", \"minorUnit\": 2 }, \"unitPricesIncludeTax\": null, \"items\": [ ], \"transactions\": [ { \"type\": \"CASH_PURCHASE\", \"id\": \"7a8f701dd40743e0ad942ae32cd0e9d8\", \"status\": \"COMPLETED\", \"amount\": 10, \"lastUpdated\": \"2019-04-11T13:36:11.597Z\", \"initialized\": \"2019-04-11T13:36:11.521Z\", \"message\": null } ], \"location\": null, \"clientInfo\": null, \"merchantReceiptId\": 245, \"cancelledBy\": null, \"shiftId\": null, \"cashRegisterId\": null, \"emailForReceipt\": null, \"emailForReceiptProvided\": false, \"multitender\": true }","title":"Get a Sale call"},{"location":"core_overview/","text":"At the core of Wirecard ePOS solution is payment processing. Core Integration chapter provides basic information in order to successfully process Payment Transaction . Note Payment Transaction (also called payment) is a monetary transaction with specific amount , payment method and type . In context of Wirecard ePOS, every Payment Transaction is part of Sale . Purchase record (also called Sale-Purchase) is created when end-consumer purchases goods. Return record (also called Sale-Return) is created when end-consumer returns purchased goods back to merchant. Important Sale is central ePOS object. It must contain amount to pay and at least one payment transaction . Additionally, Sale may include sale items (also called shopping basket), reference to merchant shop , reference to cash register and other optional sale-related information. Wirecard ePOS supports following payment methods : Cash Card (EMV/Magstripe) Alipay (barcode payment) WeChat (barcode payment) On top of traditional payment processing, Wirecard ePOS provides option to divide Sale total amount to multiple payment transactions. Example Jeans in value of 100 \u20ac are paid by two payment transactions: 60 \u20ac is paid by card and 40 \u20ac is paid in cash .","title":"Overview"},{"location":"discounts/","text":"","title":"Discounts"},{"location":"getting-started/","text":"This chapter provides all information you need to know in order to start your integration straight away. Production Environment Wirecard ePOS PROD environment is available on the following URL: https://switch.wirecard.com/mswitch-server/ Testing Environment Wirecard ePOS TEST environment is provided to API integrators for their development purposes. It is available on the following URL: https://switch-test.wirecard.com/mswitch-server/ Authentication aWirecard ePOS credentials (username & password) are required in order to successfully authenticate with Wirecard ePOS API. At the moment, only basic access authentication is supported. Tip If you have user account on TEST environment, you can check your credentials - type them instead of {YourUsername} and {YourPassword} - with following CURL request: curl - X GET \"https://switch-test.wirecard.com/mswitch-server/v1/info/version\" - H \"accept: text/plain\" - u { YourUsername }:{ YourPassword } Upon successful authentication, response includes current system version. Note In the context of an HTTP transaction, basic access authentication is a method for an HTTP user agent (e.g. a web browser) to provide a username and password when making a request. In basic HTTP authentication, a request contains a header field of the form Authorization: Basic , where credentials is the base64 encoding of id and password joined by a colon. HTTP Basic authentication (BA) implementation is the simplest technique for enforcing access controls to web resources because it does not require cookies, session identifiers, or login pages; rather, HTTP Basic authentication uses standard fields in the HTTP header, removing the need for handshakes. The BA mechanism provides no confidentiality protection for the transmitted credentials. They are merely encoded with Base64 in transit, but not encrypted or hashed in any way. Therefore, Basic Authentication is typically used in conjunction with HTTPS to provide confidentiality. When the user agent wants to send authentication credentials to the server, it may use the Authorization field. The Authorization field is constructed as follows: The username and password are combined with a single colon (:). This means that the username itself cannot contain a colon. The resulting string is encoded into an octet sequence. The character set to use for this encoding is by default unspecified, as long as it is compatible with US-ASCII, but the server may suggest use of UTF-8 by sending the charset parameter. The resulting string is encoded using a variant of Base64. The authorization method and a space (e.g. \"Basic \") is then prepended to the encoded string. For example, if the browser uses Aladdin as the username and OpenSesame as the password, then the field's value is the base64-encoding of Aladdin:OpenSesame, or QWxhZGRpbjpPcGVuU2VzYW1l. Then the Authorization header will appear as: \u201cAuthorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l\u201d See Wikipedia for more details.","title":"Getting Started"},{"location":"getting-started/#production-environment","text":"Wirecard ePOS PROD environment is available on the following URL: https://switch.wirecard.com/mswitch-server/","title":"Production Environment"},{"location":"getting-started/#testing-environment","text":"Wirecard ePOS TEST environment is provided to API integrators for their development purposes. It is available on the following URL: https://switch-test.wirecard.com/mswitch-server/","title":"Testing Environment"},{"location":"getting-started/#authentication","text":"aWirecard ePOS credentials (username & password) are required in order to successfully authenticate with Wirecard ePOS API. At the moment, only basic access authentication is supported. Tip If you have user account on TEST environment, you can check your credentials - type them instead of {YourUsername} and {YourPassword} - with following CURL request: curl - X GET \"https://switch-test.wirecard.com/mswitch-server/v1/info/version\" - H \"accept: text/plain\" - u { YourUsername }:{ YourPassword } Upon successful authentication, response includes current system version. Note In the context of an HTTP transaction, basic access authentication is a method for an HTTP user agent (e.g. a web browser) to provide a username and password when making a request. In basic HTTP authentication, a request contains a header field of the form Authorization: Basic , where credentials is the base64 encoding of id and password joined by a colon. HTTP Basic authentication (BA) implementation is the simplest technique for enforcing access controls to web resources because it does not require cookies, session identifiers, or login pages; rather, HTTP Basic authentication uses standard fields in the HTTP header, removing the need for handshakes. The BA mechanism provides no confidentiality protection for the transmitted credentials. They are merely encoded with Base64 in transit, but not encrypted or hashed in any way. Therefore, Basic Authentication is typically used in conjunction with HTTPS to provide confidentiality. When the user agent wants to send authentication credentials to the server, it may use the Authorization field. The Authorization field is constructed as follows: The username and password are combined with a single colon (:). This means that the username itself cannot contain a colon. The resulting string is encoded into an octet sequence. The character set to use for this encoding is by default unspecified, as long as it is compatible with US-ASCII, but the server may suggest use of UTF-8 by sending the charset parameter. The resulting string is encoded using a variant of Base64. The authorization method and a space (e.g. \"Basic \") is then prepended to the encoded string. For example, if the browser uses Aladdin as the username and OpenSesame as the password, then the field's value is the base64-encoding of Aladdin:OpenSesame, or QWxhZGRpbjpPcGVuU2VzYW1l. Then the Authorization header will appear as: \u201cAuthorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l\u201d See Wikipedia for more details.","title":"Authentication"},{"location":"glossary/","text":"Acronyms ISO - mPOS - mobile Point of Sale POS - Point of Sale WD - Wirecard Terminology A Acquirer B Basic Access Authentication Backend system I Issuer M Merchant P Partner Payment method Payment service provider Payment transaction (alias payment) - monetary transaction with specific amount, payment method and type. R Return S Sale Sale-Purchase Sale-Return T Transaction Transaction type U User","title":"Glossary"},{"location":"glossary/#acronyms","text":"ISO - mPOS - mobile Point of Sale POS - Point of Sale WD - Wirecard","title":"Acronyms"},{"location":"glossary/#terminology","text":"","title":"Terminology"},{"location":"glossary/#a","text":"Acquirer","title":"A"},{"location":"glossary/#b","text":"Basic Access Authentication Backend system","title":"B"},{"location":"glossary/#i","text":"Issuer","title":"I"},{"location":"glossary/#m","text":"Merchant","title":"M"},{"location":"glossary/#p","text":"Partner Payment method Payment service provider Payment transaction (alias payment) - monetary transaction with specific amount, payment method and type.","title":"P"},{"location":"glossary/#r","text":"Return","title":"R"},{"location":"glossary/#s","text":"Sale Sale-Purchase Sale-Return","title":"S"},{"location":"glossary/#t","text":"Transaction Transaction type","title":"T"},{"location":"glossary/#u","text":"User","title":"U"},{"location":"introduction/","text":"Welcome to Wirecard ePOS API Integration Guide Purpose of this integration guide is to provide step by step instructions on how to integrate with Wirecard ePOS API. Who is this for? For organizations who want to utilize Wirecard ePOS API in order to enhance their solution with payment acceptance functionality. Merchants are the actual end-users of the payment acceptance functionality. How much is covered? Our goal is to provide as much information as needed to successfully create payment acceptance solution in the shortest possible time. Core Integration covers core functionality which has to be integrated. Advanced Integration covers value added functionality which is not mandatory. How technical is it? Partner team typically consists of a project manager and one or more developers. This guide is for the whole team so the provided information ranges from non-technical to technical. What do I need to know? Following skills are required: understanding of REST API calls understanding of JSON objects Tip If you are new to payment industry, there are a lot of terms to learn. Glossary helps you with this task.","title":"Introduction"},{"location":"introduction/#welcome-to-wirecard-epos-api-integration-guide","text":"Purpose of this integration guide is to provide step by step instructions on how to integrate with Wirecard ePOS API.","title":"Welcome to Wirecard ePOS API Integration Guide"},{"location":"introduction/#who-is-this-for","text":"For organizations who want to utilize Wirecard ePOS API in order to enhance their solution with payment acceptance functionality. Merchants are the actual end-users of the payment acceptance functionality.","title":"Who is this for?"},{"location":"introduction/#how-much-is-covered","text":"Our goal is to provide as much information as needed to successfully create payment acceptance solution in the shortest possible time. Core Integration covers core functionality which has to be integrated. Advanced Integration covers value added functionality which is not mandatory.","title":"How much is covered?"},{"location":"introduction/#how-technical-is-it","text":"Partner team typically consists of a project manager and one or more developers. This guide is for the whole team so the provided information ranges from non-technical to technical.","title":"How technical is it?"},{"location":"introduction/#what-do-i-need-to-know","text":"Following skills are required: understanding of REST API calls understanding of JSON objects Tip If you are new to payment industry, there are a lot of terms to learn. Glossary helps you with this task.","title":"What do I need to know?"},{"location":"items/","text":"","title":"General"},{"location":"merchant-management/","text":"","title":"General"},{"location":"multi-tender/","text":"Wirecard ePOS solution provides an option to divide Sale total amount to multiple payment transactions. Example Jeans in value of 100 \u20ac are paid by two payment transactions: 60 \u20ac is paid by card and 40 \u20ac is paid in cash . Note In payment industry domain terms multi-tender , multi-payment and split-payment can be considered as synonyms. Why Wirecard ePOS provides multi-tender? Merchant is able to increase its revenue as the likelihood to reach more end-consumers is increasing with more payment options provided. End-consumers may want to combine multiple debit and/or credit cards, especially in case of purchases in value of thousands Euro which exceeds the limits on their cards. How to integrate multi-tender? As long as the \"multitender\" flag in the PURCHASE request is \"true\" , you are integrated. Warning It is strongly advised to send \"multitender\": \"true\" in all Sale PURCHASE requests. Otherwise you are not compliant with the latest Sale lifecycle model , which is described in this guide. How to make multi-tender Sale? Let's see real-live example below. Example Purchase of merchandise in value of 1000 EUR is paid by combining two payment methods, Alipay and cash. Initial Sale PURCHASE request: { \"multitender\": \"true\", \"operation\" : \"PURCHASE\", \"totalAmount\" : 1000, \"currencyCode\" : \"EUR\", \"payments\" : [ { \"paymentMethod\" : \"ALIPAY\", \"transactionType\" : \"PURCHASE\", \"amount\" : 700, \"consumerId\" : \"28050011747660761\" } ] } Sale REFERENCE_PURCHASE request: { \"operation\" : \"REFERENCE_PURCHASE\", \"originalSaleId\": \"5d01cf38548f4007962e7d68004fcc76\", \"payments\" : [ { \"paymentMethod\" : \"CASH\", \"transactionType\" : \"PURCHASE\", \"amount\" : 300 } ] } What is Sale lifecycle model? Every Sale PURCHASE request, which passes validation, creates Sale-Purchase record in system. Sale-Purchase record get one of the following states: IN_PROGRESS - internal state UNCONFIRMED - purchase transaction is processed regardless SUCCESS or FAILED result and Sale total amount is not fully paid COMPLETED - sum of completed purchase transactions cover Sale total amount RETURNED - all purchased goods have been returned by customer and Sale total amount is refunded PARTIALLY_RETURNED - only some of purchased goods have been returned by customer and part Sale total amount is refunded CANCELED - all purchase transactions are reversed and CANCEL operation was successful FAILED - all purchase transaction are either failed or reversed and FAIL operation was successful Tip Use GET /v1/sales/{id} call to get Sale record with all details. What is Cancel operation? CANCEL operation is used to change Sale-Purchase to UNCONFIRMED state to CANCELED state. CANCEL operation is accepted by system as long as all purchase transactions are reversed. In order to move Sale-Purchase to CANCELED state, make a POST /v1/sales call: Request { \"operation\": \"CANCEL\", \"originalSaleId\": \"bdb7dd5566f043ab9b91108863a6e833\" } \"operation\" - defines type of Sale request \"originalSaleId\" - identifier of original Sale-Purchase Response { \"operation\": \"CANCEL\", \"timeStamp\": \"2019-04-11T13:30:05.187Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"bdb7dd5566f043ab9b91108863a6e833\", \"externalCashierId\": null } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful \"result\" - \"SUCCESS\" means operation is successful \"id\" - echoed from request; Sale-Purchase identifier \"externalCashierId\" - relevant for Advanced Integration ; otherwise null What is Fail operation? FAIL operation is used to change Sale-Purchase from UNCONFIRMED state to FAILED state. FAIL operation is accepted by system as long as all purchase transactions are failed and/or reversed. In order to move Sale-Purchase to FAILED state, make a POST /v1/sales call: Request { \"operation\" : \"FAIL\", \"originalSaleId\" : \"56d72f5fa5454f3e9fc8364078f74fce\" } Response { \"operation\": \"FAIL\", \"timeStamp\": \"2019-05-22T12:07:24.857Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"56d72f5fa5454f3e9fc8364078f74fce\", \"externalCashierId\": null }","title":"Multi-tender Sale"},{"location":"multi-tender/#why-wirecard-epos-provides-multi-tender","text":"Merchant is able to increase its revenue as the likelihood to reach more end-consumers is increasing with more payment options provided. End-consumers may want to combine multiple debit and/or credit cards, especially in case of purchases in value of thousands Euro which exceeds the limits on their cards.","title":"Why Wirecard ePOS provides multi-tender?"},{"location":"multi-tender/#how-to-integrate-multi-tender","text":"As long as the \"multitender\" flag in the PURCHASE request is \"true\" , you are integrated. Warning It is strongly advised to send \"multitender\": \"true\" in all Sale PURCHASE requests. Otherwise you are not compliant with the latest Sale lifecycle model , which is described in this guide.","title":"How to integrate multi-tender?"},{"location":"multi-tender/#how-to-make-multi-tender-sale","text":"Let's see real-live example below. Example Purchase of merchandise in value of 1000 EUR is paid by combining two payment methods, Alipay and cash. Initial Sale PURCHASE request: { \"multitender\": \"true\", \"operation\" : \"PURCHASE\", \"totalAmount\" : 1000, \"currencyCode\" : \"EUR\", \"payments\" : [ { \"paymentMethod\" : \"ALIPAY\", \"transactionType\" : \"PURCHASE\", \"amount\" : 700, \"consumerId\" : \"28050011747660761\" } ] } Sale REFERENCE_PURCHASE request: { \"operation\" : \"REFERENCE_PURCHASE\", \"originalSaleId\": \"5d01cf38548f4007962e7d68004fcc76\", \"payments\" : [ { \"paymentMethod\" : \"CASH\", \"transactionType\" : \"PURCHASE\", \"amount\" : 300 } ] }","title":"How to make multi-tender Sale?"},{"location":"multi-tender/#what-is-sale-lifecycle-model","text":"Every Sale PURCHASE request, which passes validation, creates Sale-Purchase record in system. Sale-Purchase record get one of the following states: IN_PROGRESS - internal state UNCONFIRMED - purchase transaction is processed regardless SUCCESS or FAILED result and Sale total amount is not fully paid COMPLETED - sum of completed purchase transactions cover Sale total amount RETURNED - all purchased goods have been returned by customer and Sale total amount is refunded PARTIALLY_RETURNED - only some of purchased goods have been returned by customer and part Sale total amount is refunded CANCELED - all purchase transactions are reversed and CANCEL operation was successful FAILED - all purchase transaction are either failed or reversed and FAIL operation was successful Tip Use GET /v1/sales/{id} call to get Sale record with all details.","title":"What is Sale lifecycle model?"},{"location":"multi-tender/#what-is-cancel-operation","text":"CANCEL operation is used to change Sale-Purchase to UNCONFIRMED state to CANCELED state. CANCEL operation is accepted by system as long as all purchase transactions are reversed. In order to move Sale-Purchase to CANCELED state, make a POST /v1/sales call:","title":"What is Cancel operation?"},{"location":"multi-tender/#request","text":"{ \"operation\": \"CANCEL\", \"originalSaleId\": \"bdb7dd5566f043ab9b91108863a6e833\" } \"operation\" - defines type of Sale request \"originalSaleId\" - identifier of original Sale-Purchase","title":"Request"},{"location":"multi-tender/#response","text":"{ \"operation\": \"CANCEL\", \"timeStamp\": \"2019-04-11T13:30:05.187Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"bdb7dd5566f043ab9b91108863a6e833\", \"externalCashierId\": null } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful \"result\" - \"SUCCESS\" means operation is successful \"id\" - echoed from request; Sale-Purchase identifier \"externalCashierId\" - relevant for Advanced Integration ; otherwise null","title":"Response"},{"location":"multi-tender/#what-is-fail-operation","text":"FAIL operation is used to change Sale-Purchase from UNCONFIRMED state to FAILED state. FAIL operation is accepted by system as long as all purchase transactions are failed and/or reversed. In order to move Sale-Purchase to FAILED state, make a POST /v1/sales call:","title":"What is Fail operation?"},{"location":"multi-tender/#request_1","text":"{ \"operation\" : \"FAIL\", \"originalSaleId\" : \"56d72f5fa5454f3e9fc8364078f74fce\" }","title":"Request"},{"location":"multi-tender/#response_1","text":"{ \"operation\": \"FAIL\", \"timeStamp\": \"2019-05-22T12:07:24.857Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"56d72f5fa5454f3e9fc8364078f74fce\", \"externalCashierId\": null }","title":"Response"},{"location":"shift_reports/","text":"","title":"Shift Report"},{"location":"terminal-management/","text":"","title":"Terminal management"},{"location":"user/","text":"Purpose of this chapter is to describe how can merchant manage its own users. User account is required for any interaction with Wirecard ePOS API. Create a new user Request POST https://switch.wirecard.com/mswitch-server/v1/users { \"username\": \"john.doe\", \"email\": \"john.doe@example.com\", \"firstName\": \"John\", \"lastName\": \"Doe\", \"merchant\": { \"id\": \"e5869bc0303b4dabbf1e593d619146dc\" }, \"password\": \"Password123!\", \"roles\": [ \"MERCHANT_ADMIN\" ], \"status\": \"ENABLED\", \"timeZone\": \"Europe/Berlin\" } User role defines permissions available to a particular user account. Wirecard ePOS provides following merchant-related roles: Merchant Admin - see all merchant sales and can create new user accounts Merchant Advanced User - see all merchant sales Merchant User - see only own sales Response List all users GET https://switch.wirecard.com/mswitch-server/v1/users Get a specific user GET https://switch.wirecard.com/mswitch-server/v1/users/{userId} Update a specific user PUT https://switch.wirecard.com/mswitch-server/v1/users/{userId}","title":"User Management"},{"location":"user/#create-a-new-user","text":"","title":"Create a new user"},{"location":"user/#request","text":"POST https://switch.wirecard.com/mswitch-server/v1/users { \"username\": \"john.doe\", \"email\": \"john.doe@example.com\", \"firstName\": \"John\", \"lastName\": \"Doe\", \"merchant\": { \"id\": \"e5869bc0303b4dabbf1e593d619146dc\" }, \"password\": \"Password123!\", \"roles\": [ \"MERCHANT_ADMIN\" ], \"status\": \"ENABLED\", \"timeZone\": \"Europe/Berlin\" } User role defines permissions available to a particular user account. Wirecard ePOS provides following merchant-related roles: Merchant Admin - see all merchant sales and can create new user accounts Merchant Advanced User - see all merchant sales Merchant User - see only own sales","title":"Request"},{"location":"user/#response","text":"","title":"Response"},{"location":"user/#list-all-users","text":"GET https://switch.wirecard.com/mswitch-server/v1/users","title":"List all users"},{"location":"user/#get-a-specific-user","text":"GET https://switch.wirecard.com/mswitch-server/v1/users/{userId}","title":"Get a specific user"},{"location":"user/#update-a-specific-user","text":"PUT https://switch.wirecard.com/mswitch-server/v1/users/{userId}","title":"Update a specific user"},{"location":"wechat/","text":"WeChat Pay is one of China\u2018s leading payment methods. Since its start as a chat app, WeChat has grown to become a market-leading platform by connecting people, services, and businesses in China and around the world. Tip Visit Wirecard website to find out all benefits of WeChat payment. From merchant perspective, WeChat can be either one-step or two-step payment. In case end-consumer (buyer) is not prompted to authorize payment on his device then all is needed is one PURCHASE request. In case end-consumer has to authorize the payment with password or other equivalent (pin code, fingerprint, etc.) then initial PURCHASE request has to be confirmed by follow-up CONFIRM request. Workflow 1-step WeChat payment 2-step WeChat payment Note Purchase requests are serviced at following URL: https://switch.wirecard.com/mswitch-server/v1/sales In context of Wirecard ePOS, term Purchase is used for both: type of Sale - called Sale-Purchase - created by request with PURCHASE operation transaction type - cash purchase transaction, card purchase transaction, alipay purchase transaction and wechat purchase transaction Purchase Operation In order to process WeChat payment, make a POST /v1/sales call: Request { \"multitender\": \"true\", \"operation\" : \"PURCHASE\", \"externalId\": \"123456789\", \"totalAmount\" : 10, \"currencyCode\" : \"EUR\", \"payments\" : [ { \"paymentMethod\" : \"WECHAT\", \"transactionType\" : \"PURCHASE\", \"amount\" : 10, \"consumerId\" : \"15050011719660761\" } ] } \"multitender\" - boolean flag \"TRUE\" - required \"FALSE\" - deprecated \"operation\" - defines type of Sale request; PURCHASE operation creates Sale-Purchase record \"externalId\" - optional field - used for merchant tracking purposes; it is forwarded to payment gateway \"totalAmount\" - defines amount of Sale-Purchase \"currencyCode\" - defines currency, based on ISO 4217 standard \"payments\" - includes payment-specific information \"paymentMethod\" - defines payment method \"transactionType\" - defines type of transaction; PURCHASE transaction moves funds from end-consumer to merchant \"amount\" - defines transaction amount \"consumerId\" - value of scanned barcode (QR code) Response indicating 1-step WeChat payment In order to identify whether the follow-up CONFIRM operation is required, status code has to be parsed. Status Code 1000 indicates that WeChat purchase transactions is completed and no follow-up request is required . { \"operation\": \"PURCHASE\", \"timeStamp\": \"2019-05-07T12:12:38.177Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"241e578a773a4d869408f43928ddf1fd\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"WECHAT\", \"transactionType\": \"PURCHASE\", \"id\": \"776af8e4a4d843129149bdf8b73c08b9\", \"timeStamp\": \"2019-05-07T12:12:32.9Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"wechatProviderTransactionId\": \"f75ab0866f55477cb35a2db5db6bb10d\", \"wechatRate\": \"691870000\", \"wechatSubMchId\": \"444917\", \"wechatCashFee\": \"6919\", \"wechatTimeEnd\": \"20190507201238\", \"gatewayReference\": \"573ee979-a265-49b9-b020-27418dbb63ef\" } ], \"externalId\": null, \"merchantReceiptId\": 262, \"multitender\": true } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is completed successfully \"result\" - \"SUCCESS\" means operation is completed successfully \"id\" - Sale-Purchase identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - specific information for every payment method \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of purchase transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed by payment gateway \"statuses\" \"result\" - \"SUCCESS\" means transaction is completed successfully \"code\" - code \"1000\" means transaction is completed successfully \"message\" - message provided by payment gateway \"wechatProviderTransactionId\" - transaction identifier in WeChat System \"wechatRate\" - exchange rate between Sale currency and CNY in WeChat System; 691870000 means 6.918 \"wechatSubMchId\" - merchant identifier in WeChat System \"wechatCashFee\" - amount in CNY (Chinese Yuan); 6919 means 69.19 CNY \"wechatTimeEnd\" - date-time in WeChat system \"gatewayReference\" - transaction identifier in Wirecard payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier per merchant; it is incremented with every Sale-Purchase and Sale-Return; advised to be printed on receipt as a barcode \"multitender\" - echoed from request Important After successful response, making GET /v1/sales/{id} call is advised, as it provides all information. Response indicating 2-step WeChat payment In order to identify whether the follow-up CONFIRM operation is required, status code has to be parsed. Status Code 1001 indicates that WeChat purchase transactions is not completed and follow-up CONFIRM request is required . { \"operation\": \"PURCHASE\", \"timeStamp\": \"2019-05-07T12:01:24.703Z\", \"status\": { \"code\": \"1001\", \"result\": \"SUCCESS\" }, \"id\": \"3c9cf14fe82f42bfbecb6dec22edbfe3\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"WECHAT\", \"transactionType\": \"PURCHASE\", \"id\": \"9685e8c3620a4c6b8e98518c7b2427d4\", \"timeStamp\": \"2019-05-07T12:01:24.614Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1001\", \"message\": \"Transaction OK.\" } ], \"wechatSubMchId\": \"693876\", \"gatewayReference\": \"c7d76bcf-595d-4318-a9b9-38ac9ac1d53a\" } ], \"externalId\": null, \"merchantReceiptId\": 261, \"multitender\": true } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1001\" means operation is successful, however follow-up CONFIRM request is required to complete WeChat purchase transaction \"result\" - \"SUCCESS\" means operation is successful \"id\" - Sale-Purchase identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - specific information for every payment method \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of purchase transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed by payment gateway \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1001\" means transaction is successful \"message\" - message provided by payment gateway \"wechatSubMchId\" - merchant identifier in WeChat System \"gatewayReference\" - transaction identifier in Wirecard payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier per merchant; it is incremented with every Sale-Purchase and Sale-Return; advised to be printed on receipt as a barcode \"multitender\" - echoed from request Confirm Operation Request { \"operation\" : \"CONFIRM\", \"originalSaleId\" : \"3c9cf14fe82f42bfbecb6dec22edbfe3\", \"payments\" : [ { \"paymentMethod\" : \"WECHAT\", \"transactionType\" : \"CONFIRM\" } ] } \"operation\" - defines type of Sale request; \"CONFIRM\" operation does finish the WeChat Purchase transaction \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - payment-specific information; one payment transaction per request is supported \"paymentMethod\" - defines payment method; it must be same as original payment transaction \"transactionType\" - defines type of this transaction; CONFIRM operation must include CONFIRM transaction type Response Status Code 1000 indicates that WeChat purchase transaction is completed successfully. { \"operation\": \"CONFIRM\", \"timeStamp\": \"2019-05-07T12:02:24.739Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"3c9cf14fe82f42bfbecb6dec22edbfe3\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"WECHAT\", \"transactionType\": \"CONFIRM\", \"id\": \"9685e8c3620a4c6b8e98518c7b2427d4\", \"timeStamp\": \"2019-05-07T12:02:24.641Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"wechatProviderTransactionId\": \"dced92fe6e5042a8856bf8e3dc7c15f8\", \"wechatRate\": \"691870000\", \"wechatSubMchId\": \"839907\", \"wechatCashFee\": \"6919\", \"wechatTimeEnd\": \"20190507200224\", \"gatewayReference\": \"ae0d14df-7528-4e5e-b2d6-4393b8c767d9\" } ] } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful \"result\" - \"SUCCESS\" means operation is successful \"id\" - Sale-Purchase identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - specific information for every payment method \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of purchase transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed by payment gateway \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"wechatProviderTransactionId\" - transaction identifier in WeChat System \"wechatRate\" - exchange rate between Sale currency and CNY in WeChat System; 691870000 means 6.918 \"wechatSubMchId\" - merchant identifier in WeChat System \"wechatCashFee\" - amount in CNY (Chinese Yuan); 6919 means 69.19 CNY \"wechatTimeEnd\" - date-time in WeChat system \"gatewayReference\" - transaction identifier in Wirecard payment gateway Important After successful response, making GET /v1/sales/{id} call is advised, as it provides all information. Reverse Operation REVERSE operation is typically used in case purchase transaction was created accidentally and hence needs to be reversed. In order to reverse WeChat purchase transaction, make a POST /v1/sales call: Reverse Request { \"operation\": \"REVERSE\", \"originalSaleId\": \"a0a09836df08426b92d4805294bdae42\", \"payments\": [ { \"paymentMethod\": \"WECHAT\", \"transactionType\": \"REVERSAL\", \"originalTransactionId\" : \"809364e83e3043c7a15182140d55268e\" } ] } \"operation\" - defines type of Sale request \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - payment-specific information; one payment transaction per request is supported \"paymentMethod\" - defines payment method; it must be same as original payment transaction \"transactionType\" - defines type of this transaction; REVERSE operation must include REVERSAL transaction type \"originalTransactionId\" - identifier of original purchase transaction Reverse Response { \"operation\": \"REVERSE\", \"timeStamp\": \"2019-05-16T13:08:24.657Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"a0a09836df08426b92d4805294bdae42\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"WECHAT\", \"transactionType\": \"REVERSAL\", \"id\": \"c254b80758574ce387d3852e1d69c3ec\", \"timeStamp\": \"2019-05-16T13:08:24.553Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"wechatProviderTransactionId\": \"adfc24a6c25343ce86f5cb180a5cc528\", \"wechatRate\": \"691870000\", \"wechatSubMchId\": \"067227\", \"wechatDeviceInfo\": \"dell\", \"wechatCashFee\": \"6919.00\", \"wechatTimeEnd\": \"20190516210824\", \"gatewayReference\": \"8ba7937e-ea22-4b9f-855a-dce11e4a29b7\" } ] } In order to explicitly change state of Sale-Purchase to CANCELED , make a POST /v1/sales call with CANCEL operation . Return Operation RETURN operation is used in case end-consumer returns merchandise and asks for a refund. Wirecard ePOS support partial as well as full return. In order to process WeChat refund transaction, make a POST /v1/sales call defined below: Request { \"operation\" : \"RETURN\", \"totalAmount\" : 10, \"currencyCode\" : \"EUR\", \"originalSaleId\" : \"1025a74c86564982988f66a46489d87a\", \"payments\" : [ { \"paymentMethod\" : \"WECHAT\", \"transactionType\" : \"REFERENCE_REFUND\", \"amount\" : 10, \"originalTransactionId\" : \"f4c16e2ee76d44d2adfc42b97ac3e5a0\" } ] } Response { \"operation\": \"RETURN\", \"timeStamp\": \"2019-05-17T10:40:48.648Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"ba313afaf21e445abc802ab63bb69c5a\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"WECHAT\", \"transactionType\": \"REFERENCE_REFUND\", \"id\": \"1baf69229f584858ad524585db27115a\", \"timeStamp\": \"2019-05-17T10:40:48.533Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"wechatProviderTransactionId\": \"f5fd9c49306a4322a9e613d741c71de3\", \"wechatRate\": \"691870000\", \"wechatSubMchId\": \"785721\", \"wechatDeviceInfo\": \"dell\", \"wechatCashFee\": \"6919.00\", \"wechatTimeEnd\": \"20190517184048\", \"gatewayReference\": \"4fb9f8a2-7fb9-4fd7-a88c-154f58fb7ab8\" } ], \"externalId\": null, \"merchantReceiptId\": 270 } Tip To see all /v1/sales request & response examples, click here . GET a Sale Call You can see below an example of GET a Sale call with excluded merchant and user fields which are going to be described in Merchant Management and User Management respectively. GET https://switch-test.wirecard.com/mswitch-server/v1/sales/3c9cf14fe82f42bfbecb6dec22edbfe3?excludeField=merchant&excludeField=user { \"id\": \"3c9cf14fe82f42bfbecb6dec22edbfe3\", \"type\": \"PURCHASE\", \"status\": \"COMPLETED\", \"totalAmount\": 10, \"note\": null, \"externalId\": null, \"externalCashierId\": null, \"customerId\": null, \"initialized\": \"2019-05-07T12:01:24.44Z\", \"shop\": null, \"currency\": { \"number\": 978, \"code\": \"EUR\", \"name\": \"Euro\", \"minorUnit\": 2 }, \"unitPricesIncludeTax\": null, \"items\": [ ], \"transactions\": [ { \"type\": \"WECHAT_PURCHASE\", \"id\": \"9685e8c3620a4c6b8e98518c7b2427d4\", \"status\": \"COMPLETED\", \"amount\": 10, \"lastUpdated\": \"2019-05-07T12:02:24.668Z\", \"initialized\": \"2019-05-07T12:01:24.442Z\", \"message\": \"The resource was successfully created on WeChat side.\\nWas: The resource was successfully created on WeChat side, but password confirmation is needed.\", \"gateway\": { \"id\": \"wdEeSimulated\", \"name\": \"Wirecard EE Simulated\", \"type\": \"WIRECARD_EE_SIMULATED\", \"url\": \"http://dummy\" }, \"gatewayReference\": \"c7d76bcf-595d-4318-a9b9-38ac9ac1d53a\", \"processedByGateway\": \"2019-05-07T12:01:24.614Z\", \"wechatProviderTransactionId\": \"dced92fe6e5042a8856bf8e3dc7c15f8\", \"wechatRate\": \"691870000\", \"wechatSubMchId\": \"839907\", \"wechatDeviceInfo\": \"dell\", \"wechatCashFee\": \"6919.00\", \"wechatTimeEnd\": \"20190507200224\", \"autoResolveTransactions\": [ ], \"transactionBarcodeId\": \"15050011719660761\" } ], \"location\": null, \"clientInfo\": null, \"merchantReceiptId\": 261, \"cancelledBy\": null, \"shiftId\": null, \"cashRegisterId\": null, \"emailForReceipt\": null, \"emailForReceiptProvided\": false, \"multitender\": true }","title":"WeChat Pay"},{"location":"wechat/#workflow","text":"","title":"Workflow"},{"location":"wechat/#1-step-wechat-payment","text":"","title":"1-step WeChat payment"},{"location":"wechat/#2-step-wechat-payment","text":"Note Purchase requests are serviced at following URL: https://switch.wirecard.com/mswitch-server/v1/sales In context of Wirecard ePOS, term Purchase is used for both: type of Sale - called Sale-Purchase - created by request with PURCHASE operation transaction type - cash purchase transaction, card purchase transaction, alipay purchase transaction and wechat purchase transaction","title":"2-step WeChat payment"},{"location":"wechat/#purchase-operation","text":"In order to process WeChat payment, make a POST /v1/sales call:","title":"Purchase Operation"},{"location":"wechat/#request","text":"{ \"multitender\": \"true\", \"operation\" : \"PURCHASE\", \"externalId\": \"123456789\", \"totalAmount\" : 10, \"currencyCode\" : \"EUR\", \"payments\" : [ { \"paymentMethod\" : \"WECHAT\", \"transactionType\" : \"PURCHASE\", \"amount\" : 10, \"consumerId\" : \"15050011719660761\" } ] } \"multitender\" - boolean flag \"TRUE\" - required \"FALSE\" - deprecated \"operation\" - defines type of Sale request; PURCHASE operation creates Sale-Purchase record \"externalId\" - optional field - used for merchant tracking purposes; it is forwarded to payment gateway \"totalAmount\" - defines amount of Sale-Purchase \"currencyCode\" - defines currency, based on ISO 4217 standard \"payments\" - includes payment-specific information \"paymentMethod\" - defines payment method \"transactionType\" - defines type of transaction; PURCHASE transaction moves funds from end-consumer to merchant \"amount\" - defines transaction amount \"consumerId\" - value of scanned barcode (QR code)","title":"Request"},{"location":"wechat/#response-indicating-1-step-wechat-payment","text":"In order to identify whether the follow-up CONFIRM operation is required, status code has to be parsed. Status Code 1000 indicates that WeChat purchase transactions is completed and no follow-up request is required . { \"operation\": \"PURCHASE\", \"timeStamp\": \"2019-05-07T12:12:38.177Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"241e578a773a4d869408f43928ddf1fd\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"WECHAT\", \"transactionType\": \"PURCHASE\", \"id\": \"776af8e4a4d843129149bdf8b73c08b9\", \"timeStamp\": \"2019-05-07T12:12:32.9Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"wechatProviderTransactionId\": \"f75ab0866f55477cb35a2db5db6bb10d\", \"wechatRate\": \"691870000\", \"wechatSubMchId\": \"444917\", \"wechatCashFee\": \"6919\", \"wechatTimeEnd\": \"20190507201238\", \"gatewayReference\": \"573ee979-a265-49b9-b020-27418dbb63ef\" } ], \"externalId\": null, \"merchantReceiptId\": 262, \"multitender\": true } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is completed successfully \"result\" - \"SUCCESS\" means operation is completed successfully \"id\" - Sale-Purchase identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - specific information for every payment method \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of purchase transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed by payment gateway \"statuses\" \"result\" - \"SUCCESS\" means transaction is completed successfully \"code\" - code \"1000\" means transaction is completed successfully \"message\" - message provided by payment gateway \"wechatProviderTransactionId\" - transaction identifier in WeChat System \"wechatRate\" - exchange rate between Sale currency and CNY in WeChat System; 691870000 means 6.918 \"wechatSubMchId\" - merchant identifier in WeChat System \"wechatCashFee\" - amount in CNY (Chinese Yuan); 6919 means 69.19 CNY \"wechatTimeEnd\" - date-time in WeChat system \"gatewayReference\" - transaction identifier in Wirecard payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier per merchant; it is incremented with every Sale-Purchase and Sale-Return; advised to be printed on receipt as a barcode \"multitender\" - echoed from request Important After successful response, making GET /v1/sales/{id} call is advised, as it provides all information.","title":"Response indicating 1-step WeChat payment"},{"location":"wechat/#response-indicating-2-step-wechat-payment","text":"In order to identify whether the follow-up CONFIRM operation is required, status code has to be parsed. Status Code 1001 indicates that WeChat purchase transactions is not completed and follow-up CONFIRM request is required . { \"operation\": \"PURCHASE\", \"timeStamp\": \"2019-05-07T12:01:24.703Z\", \"status\": { \"code\": \"1001\", \"result\": \"SUCCESS\" }, \"id\": \"3c9cf14fe82f42bfbecb6dec22edbfe3\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"WECHAT\", \"transactionType\": \"PURCHASE\", \"id\": \"9685e8c3620a4c6b8e98518c7b2427d4\", \"timeStamp\": \"2019-05-07T12:01:24.614Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1001\", \"message\": \"Transaction OK.\" } ], \"wechatSubMchId\": \"693876\", \"gatewayReference\": \"c7d76bcf-595d-4318-a9b9-38ac9ac1d53a\" } ], \"externalId\": null, \"merchantReceiptId\": 261, \"multitender\": true } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1001\" means operation is successful, however follow-up CONFIRM request is required to complete WeChat purchase transaction \"result\" - \"SUCCESS\" means operation is successful \"id\" - Sale-Purchase identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - specific information for every payment method \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of purchase transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed by payment gateway \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1001\" means transaction is successful \"message\" - message provided by payment gateway \"wechatSubMchId\" - merchant identifier in WeChat System \"gatewayReference\" - transaction identifier in Wirecard payment gateway \"externalId\" - echoed from request \"merchantReceiptId\" - unique identifier per merchant; it is incremented with every Sale-Purchase and Sale-Return; advised to be printed on receipt as a barcode \"multitender\" - echoed from request","title":"Response indicating 2-step WeChat payment"},{"location":"wechat/#confirm-operation","text":"","title":"Confirm Operation"},{"location":"wechat/#request_1","text":"{ \"operation\" : \"CONFIRM\", \"originalSaleId\" : \"3c9cf14fe82f42bfbecb6dec22edbfe3\", \"payments\" : [ { \"paymentMethod\" : \"WECHAT\", \"transactionType\" : \"CONFIRM\" } ] } \"operation\" - defines type of Sale request; \"CONFIRM\" operation does finish the WeChat Purchase transaction \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - payment-specific information; one payment transaction per request is supported \"paymentMethod\" - defines payment method; it must be same as original payment transaction \"transactionType\" - defines type of this transaction; CONFIRM operation must include CONFIRM transaction type","title":"Request"},{"location":"wechat/#response","text":"Status Code 1000 indicates that WeChat purchase transaction is completed successfully. { \"operation\": \"CONFIRM\", \"timeStamp\": \"2019-05-07T12:02:24.739Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"3c9cf14fe82f42bfbecb6dec22edbfe3\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"WECHAT\", \"transactionType\": \"CONFIRM\", \"id\": \"9685e8c3620a4c6b8e98518c7b2427d4\", \"timeStamp\": \"2019-05-07T12:02:24.641Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"wechatProviderTransactionId\": \"dced92fe6e5042a8856bf8e3dc7c15f8\", \"wechatRate\": \"691870000\", \"wechatSubMchId\": \"839907\", \"wechatCashFee\": \"6919\", \"wechatTimeEnd\": \"20190507200224\", \"gatewayReference\": \"ae0d14df-7528-4e5e-b2d6-4393b8c767d9\" } ] } \"operation\" - echoed from request \"timeStamp\" - date-time when response was constructed \"status\" \"code\" - code \"1000\" means operation is successful \"result\" - \"SUCCESS\" means operation is successful \"id\" - Sale-Purchase identifier assigned by Wirecard ePOS system \"externalCashierId\" - relevant for Advanced Integration ; otherwise null \"payments\" - specific information for every payment method \"paymentMethod\" - echoed from request \"transactionType\" - echoed from request \"id\" - identifier of purchase transaction assigned by Wirecard ePOS system \"timeStamp\" - date-time when transaction was processed by payment gateway \"statuses\" \"result\" - \"SUCCESS\" means transaction is successful \"code\" - code \"1000\" means transaction is successful \"message\" - message provided by payment gateway \"wechatProviderTransactionId\" - transaction identifier in WeChat System \"wechatRate\" - exchange rate between Sale currency and CNY in WeChat System; 691870000 means 6.918 \"wechatSubMchId\" - merchant identifier in WeChat System \"wechatCashFee\" - amount in CNY (Chinese Yuan); 6919 means 69.19 CNY \"wechatTimeEnd\" - date-time in WeChat system \"gatewayReference\" - transaction identifier in Wirecard payment gateway Important After successful response, making GET /v1/sales/{id} call is advised, as it provides all information.","title":"Response"},{"location":"wechat/#reverse-operation","text":"REVERSE operation is typically used in case purchase transaction was created accidentally and hence needs to be reversed. In order to reverse WeChat purchase transaction, make a POST /v1/sales call:","title":"Reverse Operation"},{"location":"wechat/#reverse-request","text":"{ \"operation\": \"REVERSE\", \"originalSaleId\": \"a0a09836df08426b92d4805294bdae42\", \"payments\": [ { \"paymentMethod\": \"WECHAT\", \"transactionType\": \"REVERSAL\", \"originalTransactionId\" : \"809364e83e3043c7a15182140d55268e\" } ] } \"operation\" - defines type of Sale request \"originalSaleId\" - identifier of original Sale-Purchase \"payments\" - payment-specific information; one payment transaction per request is supported \"paymentMethod\" - defines payment method; it must be same as original payment transaction \"transactionType\" - defines type of this transaction; REVERSE operation must include REVERSAL transaction type \"originalTransactionId\" - identifier of original purchase transaction","title":"Reverse Request"},{"location":"wechat/#reverse-response","text":"{ \"operation\": \"REVERSE\", \"timeStamp\": \"2019-05-16T13:08:24.657Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"a0a09836df08426b92d4805294bdae42\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"WECHAT\", \"transactionType\": \"REVERSAL\", \"id\": \"c254b80758574ce387d3852e1d69c3ec\", \"timeStamp\": \"2019-05-16T13:08:24.553Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"wechatProviderTransactionId\": \"adfc24a6c25343ce86f5cb180a5cc528\", \"wechatRate\": \"691870000\", \"wechatSubMchId\": \"067227\", \"wechatDeviceInfo\": \"dell\", \"wechatCashFee\": \"6919.00\", \"wechatTimeEnd\": \"20190516210824\", \"gatewayReference\": \"8ba7937e-ea22-4b9f-855a-dce11e4a29b7\" } ] } In order to explicitly change state of Sale-Purchase to CANCELED , make a POST /v1/sales call with CANCEL operation .","title":"Reverse Response"},{"location":"wechat/#return-operation","text":"RETURN operation is used in case end-consumer returns merchandise and asks for a refund. Wirecard ePOS support partial as well as full return. In order to process WeChat refund transaction, make a POST /v1/sales call defined below:","title":"Return Operation"},{"location":"wechat/#request_2","text":"{ \"operation\" : \"RETURN\", \"totalAmount\" : 10, \"currencyCode\" : \"EUR\", \"originalSaleId\" : \"1025a74c86564982988f66a46489d87a\", \"payments\" : [ { \"paymentMethod\" : \"WECHAT\", \"transactionType\" : \"REFERENCE_REFUND\", \"amount\" : 10, \"originalTransactionId\" : \"f4c16e2ee76d44d2adfc42b97ac3e5a0\" } ] }","title":"Request"},{"location":"wechat/#response_1","text":"{ \"operation\": \"RETURN\", \"timeStamp\": \"2019-05-17T10:40:48.648Z\", \"status\": { \"code\": \"1000\", \"result\": \"SUCCESS\" }, \"id\": \"ba313afaf21e445abc802ab63bb69c5a\", \"externalCashierId\": null, \"payments\": [ { \"paymentMethod\": \"WECHAT\", \"transactionType\": \"REFERENCE_REFUND\", \"id\": \"1baf69229f584858ad524585db27115a\", \"timeStamp\": \"2019-05-17T10:40:48.533Z\", \"statuses\": [ { \"result\": \"SUCCESS\", \"code\": \"1000\", \"message\": \"Transaction OK.\" } ], \"wechatProviderTransactionId\": \"f5fd9c49306a4322a9e613d741c71de3\", \"wechatRate\": \"691870000\", \"wechatSubMchId\": \"785721\", \"wechatDeviceInfo\": \"dell\", \"wechatCashFee\": \"6919.00\", \"wechatTimeEnd\": \"20190517184048\", \"gatewayReference\": \"4fb9f8a2-7fb9-4fd7-a88c-154f58fb7ab8\" } ], \"externalId\": null, \"merchantReceiptId\": 270 } Tip To see all /v1/sales request & response examples, click here .","title":"Response"},{"location":"wechat/#get-a-sale-call","text":"You can see below an example of GET a Sale call with excluded merchant and user fields which are going to be described in Merchant Management and User Management respectively. GET https://switch-test.wirecard.com/mswitch-server/v1/sales/3c9cf14fe82f42bfbecb6dec22edbfe3?excludeField=merchant&excludeField=user { \"id\": \"3c9cf14fe82f42bfbecb6dec22edbfe3\", \"type\": \"PURCHASE\", \"status\": \"COMPLETED\", \"totalAmount\": 10, \"note\": null, \"externalId\": null, \"externalCashierId\": null, \"customerId\": null, \"initialized\": \"2019-05-07T12:01:24.44Z\", \"shop\": null, \"currency\": { \"number\": 978, \"code\": \"EUR\", \"name\": \"Euro\", \"minorUnit\": 2 }, \"unitPricesIncludeTax\": null, \"items\": [ ], \"transactions\": [ { \"type\": \"WECHAT_PURCHASE\", \"id\": \"9685e8c3620a4c6b8e98518c7b2427d4\", \"status\": \"COMPLETED\", \"amount\": 10, \"lastUpdated\": \"2019-05-07T12:02:24.668Z\", \"initialized\": \"2019-05-07T12:01:24.442Z\", \"message\": \"The resource was successfully created on WeChat side.\\nWas: The resource was successfully created on WeChat side, but password confirmation is needed.\", \"gateway\": { \"id\": \"wdEeSimulated\", \"name\": \"Wirecard EE Simulated\", \"type\": \"WIRECARD_EE_SIMULATED\", \"url\": \"http://dummy\" }, \"gatewayReference\": \"c7d76bcf-595d-4318-a9b9-38ac9ac1d53a\", \"processedByGateway\": \"2019-05-07T12:01:24.614Z\", \"wechatProviderTransactionId\": \"dced92fe6e5042a8856bf8e3dc7c15f8\", \"wechatRate\": \"691870000\", \"wechatSubMchId\": \"839907\", \"wechatDeviceInfo\": \"dell\", \"wechatCashFee\": \"6919.00\", \"wechatTimeEnd\": \"20190507200224\", \"autoResolveTransactions\": [ ], \"transactionBarcodeId\": \"15050011719660761\" } ], \"location\": null, \"clientInfo\": null, \"merchantReceiptId\": 261, \"cancelledBy\": null, \"shiftId\": null, \"cashRegisterId\": null, \"emailForReceipt\": null, \"emailForReceiptProvided\": false, \"multitender\": true }","title":"GET a Sale Call"}]}